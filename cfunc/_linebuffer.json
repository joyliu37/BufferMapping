{"top":"global.lb32",
"namespaces":{
  "global":{
    "modules":{
      "lb32":{
        "type":["Record",[
          ["in",["Array",2,["Array",2,["Array",16,"BitIn"]]]],
          ["reset","BitIn"],
          ["wen","BitIn"],
          ["out",["Array",6,["Array",6,["Array",16,"Bit"]]]]
        ]],
        "instances":{
          "lb32_inst$lb_recurse$lb1d_0$reg_2":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",16]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",16],"16'hxxxx"]}
          },
          "lb32_inst$lb_recurse$lb1d_0$reg_3":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",16]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",16],"16'hxxxx"]}
          },
          "lb32_inst$lb_recurse$lb1d_0$reg_4":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",16]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",16],"16'hxxxx"]}
          },
          "lb32_inst$lb_recurse$lb1d_0$reg_5":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",16]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",16],"16'hxxxx"]}
          },
          "lb32_inst$lb_recurse$lb1d_0$reset_term":{
            "modref":"corebit.term"
          },
          "lb32_inst$lb_recurse$lb1d_1$reg_2":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",16]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",16],"16'hxxxx"]}
          },
          "lb32_inst$lb_recurse$lb1d_1$reg_3":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",16]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",16],"16'hxxxx"]}
          },
          "lb32_inst$lb_recurse$lb1d_1$reg_4":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",16]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",16],"16'hxxxx"]}
          },
          "lb32_inst$lb_recurse$lb1d_1$reg_5":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",16]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",16],"16'hxxxx"]}
          },
          "lb32_inst$lb_recurse$lb1d_1$reset_term":{
            "modref":"corebit.term"
          },
          "lb32_inst$lb_recurse$lb1d_2$reg_2":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",16]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",16],"16'hxxxx"]}
          },
          "lb32_inst$lb_recurse$lb1d_2$reg_3":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",16]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",16],"16'hxxxx"]}
          },
          "lb32_inst$lb_recurse$lb1d_2$reg_4":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",16]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",16],"16'hxxxx"]}
          },
          "lb32_inst$lb_recurse$lb1d_2$reg_5":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",16]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",16],"16'hxxxx"]}
          },
          "lb32_inst$lb_recurse$lb1d_2$reset_term":{
            "modref":"corebit.term"
          },
          "lb32_inst$lb_recurse$lb1d_3$reg_2":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",16]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",16],"16'hxxxx"]}
          },
          "lb32_inst$lb_recurse$lb1d_3$reg_3":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",16]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",16],"16'hxxxx"]}
          },
          "lb32_inst$lb_recurse$lb1d_3$reg_4":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",16]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",16],"16'hxxxx"]}
          },
          "lb32_inst$lb_recurse$lb1d_3$reg_5":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",16]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",16],"16'hxxxx"]}
          },
          "lb32_inst$lb_recurse$lb1d_3$reset_term":{
            "modref":"corebit.term"
          },
          "lb32_inst$lb_recurse$lb1d_4$reg_2":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",16]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",16],"16'hxxxx"]}
          },
          "lb32_inst$lb_recurse$lb1d_4$reg_3":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",16]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",16],"16'hxxxx"]}
          },
          "lb32_inst$lb_recurse$lb1d_4$reg_4":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",16]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",16],"16'hxxxx"]}
          },
          "lb32_inst$lb_recurse$lb1d_4$reg_5":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",16]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",16],"16'hxxxx"]}
          },
          "lb32_inst$lb_recurse$lb1d_4$reset_term":{
            "modref":"corebit.term"
          },
          "lb32_inst$lb_recurse$lb1d_5$reg_2":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",16]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",16],"16'hxxxx"]}
          },
          "lb32_inst$lb_recurse$lb1d_5$reg_3":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",16]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",16],"16'hxxxx"]}
          },
          "lb32_inst$lb_recurse$lb1d_5$reg_4":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",16]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",16],"16'hxxxx"]}
          },
          "lb32_inst$lb_recurse$lb1d_5$reg_5":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",16]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",16],"16'hxxxx"]}
          },
          "lb32_inst$lb_recurse$lb1d_5$reset_term":{
            "modref":"corebit.term"
          },
          "lb32_inst$lb_recurse$lbmem_2_0$add_wen":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_2_0$c1":{
            "modref":"corebit.const",
            "modargs":{"value":["Bool",true]}
          },
          "lb32_inst$lb_recurse$lbmem_2_0$cnt$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",6]},
            "modargs":{"value":[["BitVector",6],"6'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_2_0$cnt$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_2_0$cnt$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_2_0$cnt$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",6]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",6],"6'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_2_0$depth_m1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",6]},
            "modargs":{"value":[["BitVector",6],"6'h18"]}
          },
          "lb32_inst$lb_recurse$lbmem_2_0$eq_depth":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_2_0$mem":{
            "genref":"coreir.mem",
            "genargs":{"depth":["Int",24], "has_init":["Bool",false], "width":["Int",16]}
          },
          "lb32_inst$lb_recurse$lbmem_2_0$out_and_wen":{
            "modref":"corebit.and"
          },
          "lb32_inst$lb_recurse$lbmem_2_0$raddr$add":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_2_0$raddr$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_2_0$raddr$c1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h01"]}
          },
          "lb32_inst$lb_recurse$lbmem_2_0$raddr$eq":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_2_0$raddr$maxval":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h17"]}
          },
          "lb32_inst$lb_recurse$lbmem_2_0$raddr$mux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_2_0$raddr$r$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_2_0$raddr$r$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_2_0$raddr$r$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_2_0$raddr$r$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",5]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_2_0$state$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lbmem_2_0$state$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lbmem_2_0$state$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lbmem_2_0$state$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",1]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lbmem_2_0$state0":{
            "modref":"corebit.not"
          },
          "lb32_inst$lb_recurse$lbmem_2_0$waddr$add":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_2_0$waddr$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_2_0$waddr$c1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h01"]}
          },
          "lb32_inst$lb_recurse$lbmem_2_0$waddr$eq":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_2_0$waddr$maxval":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h17"]}
          },
          "lb32_inst$lb_recurse$lbmem_2_0$waddr$mux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_2_0$waddr$r$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_2_0$waddr$r$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_2_0$waddr$r$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_2_0$waddr$r$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",5]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_2_0$wen_ext":{
            "genref":"coreir.zext",
            "genargs":{"width_in":["Int",1], "width_out":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_2_0_flush":{
            "modref":"corebit.const",
            "modargs":{"value":["Bool",false]}
          },
          "lb32_inst$lb_recurse$lbmem_2_1$add_wen":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_2_1$c1":{
            "modref":"corebit.const",
            "modargs":{"value":["Bool",true]}
          },
          "lb32_inst$lb_recurse$lbmem_2_1$cnt$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",6]},
            "modargs":{"value":[["BitVector",6],"6'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_2_1$cnt$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_2_1$cnt$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_2_1$cnt$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",6]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",6],"6'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_2_1$depth_m1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",6]},
            "modargs":{"value":[["BitVector",6],"6'h18"]}
          },
          "lb32_inst$lb_recurse$lbmem_2_1$eq_depth":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_2_1$mem":{
            "genref":"coreir.mem",
            "genargs":{"depth":["Int",24], "has_init":["Bool",false], "width":["Int",16]}
          },
          "lb32_inst$lb_recurse$lbmem_2_1$out_and_wen":{
            "modref":"corebit.and"
          },
          "lb32_inst$lb_recurse$lbmem_2_1$raddr$add":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_2_1$raddr$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_2_1$raddr$c1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h01"]}
          },
          "lb32_inst$lb_recurse$lbmem_2_1$raddr$eq":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_2_1$raddr$maxval":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h17"]}
          },
          "lb32_inst$lb_recurse$lbmem_2_1$raddr$mux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_2_1$raddr$r$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_2_1$raddr$r$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_2_1$raddr$r$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_2_1$raddr$r$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",5]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_2_1$state$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lbmem_2_1$state$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lbmem_2_1$state$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lbmem_2_1$state$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",1]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lbmem_2_1$state0":{
            "modref":"corebit.not"
          },
          "lb32_inst$lb_recurse$lbmem_2_1$waddr$add":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_2_1$waddr$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_2_1$waddr$c1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h01"]}
          },
          "lb32_inst$lb_recurse$lbmem_2_1$waddr$eq":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_2_1$waddr$maxval":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h17"]}
          },
          "lb32_inst$lb_recurse$lbmem_2_1$waddr$mux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_2_1$waddr$r$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_2_1$waddr$r$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_2_1$waddr$r$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_2_1$waddr$r$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",5]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_2_1$wen_ext":{
            "genref":"coreir.zext",
            "genargs":{"width_in":["Int",1], "width_out":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_2_1_flush":{
            "modref":"corebit.const",
            "modargs":{"value":["Bool",false]}
          },
          "lb32_inst$lb_recurse$lbmem_3_0$add_wen":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_3_0$c1":{
            "modref":"corebit.const",
            "modargs":{"value":["Bool",true]}
          },
          "lb32_inst$lb_recurse$lbmem_3_0$cnt$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",6]},
            "modargs":{"value":[["BitVector",6],"6'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_3_0$cnt$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_3_0$cnt$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_3_0$cnt$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",6]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",6],"6'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_3_0$depth_m1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",6]},
            "modargs":{"value":[["BitVector",6],"6'h18"]}
          },
          "lb32_inst$lb_recurse$lbmem_3_0$eq_depth":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_3_0$mem":{
            "genref":"coreir.mem",
            "genargs":{"depth":["Int",24], "has_init":["Bool",false], "width":["Int",16]}
          },
          "lb32_inst$lb_recurse$lbmem_3_0$out_and_wen":{
            "modref":"corebit.and"
          },
          "lb32_inst$lb_recurse$lbmem_3_0$raddr$add":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_3_0$raddr$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_3_0$raddr$c1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h01"]}
          },
          "lb32_inst$lb_recurse$lbmem_3_0$raddr$eq":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_3_0$raddr$maxval":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h17"]}
          },
          "lb32_inst$lb_recurse$lbmem_3_0$raddr$mux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_3_0$raddr$r$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_3_0$raddr$r$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_3_0$raddr$r$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_3_0$raddr$r$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",5]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_3_0$state$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lbmem_3_0$state$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lbmem_3_0$state$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lbmem_3_0$state$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",1]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lbmem_3_0$state0":{
            "modref":"corebit.not"
          },
          "lb32_inst$lb_recurse$lbmem_3_0$waddr$add":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_3_0$waddr$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_3_0$waddr$c1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h01"]}
          },
          "lb32_inst$lb_recurse$lbmem_3_0$waddr$eq":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_3_0$waddr$maxval":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h17"]}
          },
          "lb32_inst$lb_recurse$lbmem_3_0$waddr$mux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_3_0$waddr$r$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_3_0$waddr$r$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_3_0$waddr$r$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_3_0$waddr$r$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",5]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_3_0$wen_ext":{
            "genref":"coreir.zext",
            "genargs":{"width_in":["Int",1], "width_out":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_3_0_flush":{
            "modref":"corebit.const",
            "modargs":{"value":["Bool",false]}
          },
          "lb32_inst$lb_recurse$lbmem_3_1$add_wen":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_3_1$c1":{
            "modref":"corebit.const",
            "modargs":{"value":["Bool",true]}
          },
          "lb32_inst$lb_recurse$lbmem_3_1$cnt$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",6]},
            "modargs":{"value":[["BitVector",6],"6'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_3_1$cnt$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_3_1$cnt$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_3_1$cnt$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",6]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",6],"6'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_3_1$depth_m1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",6]},
            "modargs":{"value":[["BitVector",6],"6'h18"]}
          },
          "lb32_inst$lb_recurse$lbmem_3_1$eq_depth":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_3_1$mem":{
            "genref":"coreir.mem",
            "genargs":{"depth":["Int",24], "has_init":["Bool",false], "width":["Int",16]}
          },
          "lb32_inst$lb_recurse$lbmem_3_1$out_and_wen":{
            "modref":"corebit.and"
          },
          "lb32_inst$lb_recurse$lbmem_3_1$raddr$add":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_3_1$raddr$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_3_1$raddr$c1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h01"]}
          },
          "lb32_inst$lb_recurse$lbmem_3_1$raddr$eq":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_3_1$raddr$maxval":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h17"]}
          },
          "lb32_inst$lb_recurse$lbmem_3_1$raddr$mux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_3_1$raddr$r$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_3_1$raddr$r$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_3_1$raddr$r$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_3_1$raddr$r$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",5]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_3_1$state$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lbmem_3_1$state$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lbmem_3_1$state$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lbmem_3_1$state$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",1]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lbmem_3_1$state0":{
            "modref":"corebit.not"
          },
          "lb32_inst$lb_recurse$lbmem_3_1$waddr$add":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_3_1$waddr$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_3_1$waddr$c1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h01"]}
          },
          "lb32_inst$lb_recurse$lbmem_3_1$waddr$eq":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_3_1$waddr$maxval":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h17"]}
          },
          "lb32_inst$lb_recurse$lbmem_3_1$waddr$mux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_3_1$waddr$r$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_3_1$waddr$r$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_3_1$waddr$r$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_3_1$waddr$r$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",5]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_3_1$wen_ext":{
            "genref":"coreir.zext",
            "genargs":{"width_in":["Int",1], "width_out":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_3_1_flush":{
            "modref":"corebit.const",
            "modargs":{"value":["Bool",false]}
          },
          "lb32_inst$lb_recurse$lbmem_4_0$add_wen":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_4_0$c1":{
            "modref":"corebit.const",
            "modargs":{"value":["Bool",true]}
          },
          "lb32_inst$lb_recurse$lbmem_4_0$cnt$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",6]},
            "modargs":{"value":[["BitVector",6],"6'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_4_0$cnt$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_4_0$cnt$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_4_0$cnt$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",6]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",6],"6'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_4_0$depth_m1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",6]},
            "modargs":{"value":[["BitVector",6],"6'h18"]}
          },
          "lb32_inst$lb_recurse$lbmem_4_0$eq_depth":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_4_0$mem":{
            "genref":"coreir.mem",
            "genargs":{"depth":["Int",24], "has_init":["Bool",false], "width":["Int",16]}
          },
          "lb32_inst$lb_recurse$lbmem_4_0$out_and_wen":{
            "modref":"corebit.and"
          },
          "lb32_inst$lb_recurse$lbmem_4_0$raddr$add":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_4_0$raddr$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_4_0$raddr$c1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h01"]}
          },
          "lb32_inst$lb_recurse$lbmem_4_0$raddr$eq":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_4_0$raddr$maxval":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h17"]}
          },
          "lb32_inst$lb_recurse$lbmem_4_0$raddr$mux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_4_0$raddr$r$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_4_0$raddr$r$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_4_0$raddr$r$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_4_0$raddr$r$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",5]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_4_0$state$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lbmem_4_0$state$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lbmem_4_0$state$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lbmem_4_0$state$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",1]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lbmem_4_0$state0":{
            "modref":"corebit.not"
          },
          "lb32_inst$lb_recurse$lbmem_4_0$waddr$add":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_4_0$waddr$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_4_0$waddr$c1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h01"]}
          },
          "lb32_inst$lb_recurse$lbmem_4_0$waddr$eq":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_4_0$waddr$maxval":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h17"]}
          },
          "lb32_inst$lb_recurse$lbmem_4_0$waddr$mux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_4_0$waddr$r$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_4_0$waddr$r$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_4_0$waddr$r$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_4_0$waddr$r$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",5]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_4_0$wen_ext":{
            "genref":"coreir.zext",
            "genargs":{"width_in":["Int",1], "width_out":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_4_0_flush":{
            "modref":"corebit.const",
            "modargs":{"value":["Bool",false]}
          },
          "lb32_inst$lb_recurse$lbmem_4_1$add_wen":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_4_1$c1":{
            "modref":"corebit.const",
            "modargs":{"value":["Bool",true]}
          },
          "lb32_inst$lb_recurse$lbmem_4_1$cnt$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",6]},
            "modargs":{"value":[["BitVector",6],"6'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_4_1$cnt$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_4_1$cnt$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_4_1$cnt$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",6]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",6],"6'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_4_1$depth_m1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",6]},
            "modargs":{"value":[["BitVector",6],"6'h18"]}
          },
          "lb32_inst$lb_recurse$lbmem_4_1$eq_depth":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_4_1$mem":{
            "genref":"coreir.mem",
            "genargs":{"depth":["Int",24], "has_init":["Bool",false], "width":["Int",16]}
          },
          "lb32_inst$lb_recurse$lbmem_4_1$out_and_wen":{
            "modref":"corebit.and"
          },
          "lb32_inst$lb_recurse$lbmem_4_1$raddr$add":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_4_1$raddr$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_4_1$raddr$c1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h01"]}
          },
          "lb32_inst$lb_recurse$lbmem_4_1$raddr$eq":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_4_1$raddr$maxval":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h17"]}
          },
          "lb32_inst$lb_recurse$lbmem_4_1$raddr$mux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_4_1$raddr$r$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_4_1$raddr$r$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_4_1$raddr$r$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_4_1$raddr$r$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",5]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_4_1$state$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lbmem_4_1$state$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lbmem_4_1$state$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lbmem_4_1$state$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",1]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lbmem_4_1$state0":{
            "modref":"corebit.not"
          },
          "lb32_inst$lb_recurse$lbmem_4_1$waddr$add":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_4_1$waddr$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_4_1$waddr$c1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h01"]}
          },
          "lb32_inst$lb_recurse$lbmem_4_1$waddr$eq":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_4_1$waddr$maxval":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h17"]}
          },
          "lb32_inst$lb_recurse$lbmem_4_1$waddr$mux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_4_1$waddr$r$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_4_1$waddr$r$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_4_1$waddr$r$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_4_1$waddr$r$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",5]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_4_1$wen_ext":{
            "genref":"coreir.zext",
            "genargs":{"width_in":["Int",1], "width_out":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_4_1_flush":{
            "modref":"corebit.const",
            "modargs":{"value":["Bool",false]}
          },
          "lb32_inst$lb_recurse$lbmem_5_0$add_wen":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_5_0$c1":{
            "modref":"corebit.const",
            "modargs":{"value":["Bool",true]}
          },
          "lb32_inst$lb_recurse$lbmem_5_0$cnt$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",6]},
            "modargs":{"value":[["BitVector",6],"6'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_5_0$cnt$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_5_0$cnt$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_5_0$cnt$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",6]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",6],"6'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_5_0$depth_m1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",6]},
            "modargs":{"value":[["BitVector",6],"6'h18"]}
          },
          "lb32_inst$lb_recurse$lbmem_5_0$eq_depth":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_5_0$mem":{
            "genref":"coreir.mem",
            "genargs":{"depth":["Int",24], "has_init":["Bool",false], "width":["Int",16]}
          },
          "lb32_inst$lb_recurse$lbmem_5_0$out_and_wen":{
            "modref":"corebit.and"
          },
          "lb32_inst$lb_recurse$lbmem_5_0$raddr$add":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_5_0$raddr$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_5_0$raddr$c1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h01"]}
          },
          "lb32_inst$lb_recurse$lbmem_5_0$raddr$eq":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_5_0$raddr$maxval":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h17"]}
          },
          "lb32_inst$lb_recurse$lbmem_5_0$raddr$mux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_5_0$raddr$r$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_5_0$raddr$r$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_5_0$raddr$r$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_5_0$raddr$r$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",5]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_5_0$state$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lbmem_5_0$state$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lbmem_5_0$state$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lbmem_5_0$state$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",1]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lbmem_5_0$state0":{
            "modref":"corebit.not"
          },
          "lb32_inst$lb_recurse$lbmem_5_0$waddr$add":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_5_0$waddr$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_5_0$waddr$c1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h01"]}
          },
          "lb32_inst$lb_recurse$lbmem_5_0$waddr$eq":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_5_0$waddr$maxval":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h17"]}
          },
          "lb32_inst$lb_recurse$lbmem_5_0$waddr$mux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_5_0$waddr$r$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_5_0$waddr$r$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_5_0$waddr$r$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_5_0$waddr$r$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",5]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_5_0$wen_ext":{
            "genref":"coreir.zext",
            "genargs":{"width_in":["Int",1], "width_out":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_5_0_flush":{
            "modref":"corebit.const",
            "modargs":{"value":["Bool",false]}
          },
          "lb32_inst$lb_recurse$lbmem_5_1$add_wen":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_5_1$c1":{
            "modref":"corebit.const",
            "modargs":{"value":["Bool",true]}
          },
          "lb32_inst$lb_recurse$lbmem_5_1$cnt$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",6]},
            "modargs":{"value":[["BitVector",6],"6'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_5_1$cnt$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_5_1$cnt$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_5_1$cnt$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",6]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",6],"6'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_5_1$depth_m1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",6]},
            "modargs":{"value":[["BitVector",6],"6'h18"]}
          },
          "lb32_inst$lb_recurse$lbmem_5_1$eq_depth":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_5_1$mem":{
            "genref":"coreir.mem",
            "genargs":{"depth":["Int",24], "has_init":["Bool",false], "width":["Int",16]}
          },
          "lb32_inst$lb_recurse$lbmem_5_1$out_and_wen":{
            "modref":"corebit.and"
          },
          "lb32_inst$lb_recurse$lbmem_5_1$raddr$add":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_5_1$raddr$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_5_1$raddr$c1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h01"]}
          },
          "lb32_inst$lb_recurse$lbmem_5_1$raddr$eq":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_5_1$raddr$maxval":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h17"]}
          },
          "lb32_inst$lb_recurse$lbmem_5_1$raddr$mux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_5_1$raddr$r$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_5_1$raddr$r$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_5_1$raddr$r$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_5_1$raddr$r$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",5]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_5_1$state$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lbmem_5_1$state$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lbmem_5_1$state$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lbmem_5_1$state$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",1]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lbmem_5_1$state0":{
            "modref":"corebit.not"
          },
          "lb32_inst$lb_recurse$lbmem_5_1$waddr$add":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_5_1$waddr$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_5_1$waddr$c1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h01"]}
          },
          "lb32_inst$lb_recurse$lbmem_5_1$waddr$eq":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_5_1$waddr$maxval":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h17"]}
          },
          "lb32_inst$lb_recurse$lbmem_5_1$waddr$mux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_5_1$waddr$r$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",5]},
            "modargs":{"value":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_5_1$waddr$r$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_5_1$waddr$r$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",5]}
          },
          "lb32_inst$lb_recurse$lbmem_5_1$waddr$r$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",5]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",5],"5'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_5_1$wen_ext":{
            "genref":"coreir.zext",
            "genargs":{"width_in":["Int",1], "width_out":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_5_1_flush":{
            "modref":"corebit.const",
            "modargs":{"value":["Bool",false]}
          }
        },
        "connections":[
          ["self.in.0.0","lb32_inst$lb_recurse$lb1d_0$reg_2.in"],
          ["lb32_inst$lb_recurse$lb1d_0$reg_4.in","lb32_inst$lb_recurse$lb1d_0$reg_2.out"],
          ["self.out.4.2","lb32_inst$lb_recurse$lb1d_0$reg_2.out"],
          ["self.in.0.1","lb32_inst$lb_recurse$lb1d_0$reg_3.in"],
          ["lb32_inst$lb_recurse$lb1d_0$reg_5.in","lb32_inst$lb_recurse$lb1d_0$reg_3.out"],
          ["self.out.4.3","lb32_inst$lb_recurse$lb1d_0$reg_3.out"],
          ["self.out.4.0","lb32_inst$lb_recurse$lb1d_0$reg_4.out"],
          ["self.out.4.1","lb32_inst$lb_recurse$lb1d_0$reg_5.out"],
          ["self.reset","lb32_inst$lb_recurse$lb1d_0$reset_term.in"],
          ["self.in.1.0","lb32_inst$lb_recurse$lb1d_1$reg_2.in"],
          ["lb32_inst$lb_recurse$lb1d_1$reg_4.in","lb32_inst$lb_recurse$lb1d_1$reg_2.out"],
          ["self.out.5.2","lb32_inst$lb_recurse$lb1d_1$reg_2.out"],
          ["self.in.1.1","lb32_inst$lb_recurse$lb1d_1$reg_3.in"],
          ["lb32_inst$lb_recurse$lb1d_1$reg_5.in","lb32_inst$lb_recurse$lb1d_1$reg_3.out"],
          ["self.out.5.3","lb32_inst$lb_recurse$lb1d_1$reg_3.out"],
          ["self.out.5.0","lb32_inst$lb_recurse$lb1d_1$reg_4.out"],
          ["self.out.5.1","lb32_inst$lb_recurse$lb1d_1$reg_5.out"],
          ["self.reset","lb32_inst$lb_recurse$lb1d_1$reset_term.in"],
          ["lb32_inst$lb_recurse$lbmem_2_0$mem.rdata","lb32_inst$lb_recurse$lb1d_2$reg_2.in"],
          ["lb32_inst$lb_recurse$lb1d_2$reg_4.in","lb32_inst$lb_recurse$lb1d_2$reg_2.out"],
          ["self.out.2.2","lb32_inst$lb_recurse$lb1d_2$reg_2.out"],
          ["lb32_inst$lb_recurse$lbmem_2_1$mem.rdata","lb32_inst$lb_recurse$lb1d_2$reg_3.in"],
          ["lb32_inst$lb_recurse$lb1d_2$reg_5.in","lb32_inst$lb_recurse$lb1d_2$reg_3.out"],
          ["self.out.2.3","lb32_inst$lb_recurse$lb1d_2$reg_3.out"],
          ["self.out.2.0","lb32_inst$lb_recurse$lb1d_2$reg_4.out"],
          ["self.out.2.1","lb32_inst$lb_recurse$lb1d_2$reg_5.out"],
          ["self.reset","lb32_inst$lb_recurse$lb1d_2$reset_term.in"],
          ["lb32_inst$lb_recurse$lbmem_3_0$mem.rdata","lb32_inst$lb_recurse$lb1d_3$reg_2.in"],
          ["lb32_inst$lb_recurse$lb1d_3$reg_4.in","lb32_inst$lb_recurse$lb1d_3$reg_2.out"],
          ["self.out.3.2","lb32_inst$lb_recurse$lb1d_3$reg_2.out"],
          ["lb32_inst$lb_recurse$lbmem_3_1$mem.rdata","lb32_inst$lb_recurse$lb1d_3$reg_3.in"],
          ["lb32_inst$lb_recurse$lb1d_3$reg_5.in","lb32_inst$lb_recurse$lb1d_3$reg_3.out"],
          ["self.out.3.3","lb32_inst$lb_recurse$lb1d_3$reg_3.out"],
          ["self.out.3.0","lb32_inst$lb_recurse$lb1d_3$reg_4.out"],
          ["self.out.3.1","lb32_inst$lb_recurse$lb1d_3$reg_5.out"],
          ["self.reset","lb32_inst$lb_recurse$lb1d_3$reset_term.in"],
          ["lb32_inst$lb_recurse$lbmem_4_0$mem.rdata","lb32_inst$lb_recurse$lb1d_4$reg_2.in"],
          ["lb32_inst$lb_recurse$lb1d_4$reg_4.in","lb32_inst$lb_recurse$lb1d_4$reg_2.out"],
          ["self.out.0.2","lb32_inst$lb_recurse$lb1d_4$reg_2.out"],
          ["lb32_inst$lb_recurse$lbmem_4_1$mem.rdata","lb32_inst$lb_recurse$lb1d_4$reg_3.in"],
          ["lb32_inst$lb_recurse$lb1d_4$reg_5.in","lb32_inst$lb_recurse$lb1d_4$reg_3.out"],
          ["self.out.0.3","lb32_inst$lb_recurse$lb1d_4$reg_3.out"],
          ["self.out.0.0","lb32_inst$lb_recurse$lb1d_4$reg_4.out"],
          ["self.out.0.1","lb32_inst$lb_recurse$lb1d_4$reg_5.out"],
          ["self.reset","lb32_inst$lb_recurse$lb1d_4$reset_term.in"],
          ["lb32_inst$lb_recurse$lbmem_5_0$mem.rdata","lb32_inst$lb_recurse$lb1d_5$reg_2.in"],
          ["lb32_inst$lb_recurse$lb1d_5$reg_4.in","lb32_inst$lb_recurse$lb1d_5$reg_2.out"],
          ["self.out.1.2","lb32_inst$lb_recurse$lb1d_5$reg_2.out"],
          ["lb32_inst$lb_recurse$lbmem_5_1$mem.rdata","lb32_inst$lb_recurse$lb1d_5$reg_3.in"],
          ["lb32_inst$lb_recurse$lb1d_5$reg_5.in","lb32_inst$lb_recurse$lb1d_5$reg_3.out"],
          ["self.out.1.3","lb32_inst$lb_recurse$lb1d_5$reg_3.out"],
          ["self.out.1.0","lb32_inst$lb_recurse$lb1d_5$reg_4.out"],
          ["self.out.1.1","lb32_inst$lb_recurse$lb1d_5$reg_5.out"],
          ["self.reset","lb32_inst$lb_recurse$lb1d_5$reset_term.in"],
          ["lb32_inst$lb_recurse$lbmem_2_0$wen_ext.out","lb32_inst$lb_recurse$lbmem_2_0$add_wen.in0"],
          ["lb32_inst$lb_recurse$lbmem_2_0$cnt$reg0.out","lb32_inst$lb_recurse$lbmem_2_0$add_wen.in1"],
          ["lb32_inst$lb_recurse$lbmem_2_0$cnt$enMux.in1","lb32_inst$lb_recurse$lbmem_2_0$add_wen.out"],
          ["lb32_inst$lb_recurse$lbmem_2_0$eq_depth.in1","lb32_inst$lb_recurse$lbmem_2_0$add_wen.out"],
          ["lb32_inst$lb_recurse$lbmem_2_0$state$enMux.in1.0","lb32_inst$lb_recurse$lbmem_2_0$c1.out"],
          ["lb32_inst$lb_recurse$lbmem_2_0$cnt$clrMux.in1","lb32_inst$lb_recurse$lbmem_2_0$cnt$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_2_0$cnt$enMux.out","lb32_inst$lb_recurse$lbmem_2_0$cnt$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_2_0$cnt$reg0.in","lb32_inst$lb_recurse$lbmem_2_0$cnt$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_2_0_flush.out","lb32_inst$lb_recurse$lbmem_2_0$cnt$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_2_0$cnt$reg0.out","lb32_inst$lb_recurse$lbmem_2_0$cnt$enMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_2_0$state0.out","lb32_inst$lb_recurse$lbmem_2_0$cnt$enMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_2_0$eq_depth.in0","lb32_inst$lb_recurse$lbmem_2_0$depth_m1.out"],
          ["lb32_inst$lb_recurse$lbmem_2_0$state$enMux.sel","lb32_inst$lb_recurse$lbmem_2_0$eq_depth.out"],
          ["lb32_inst$lb_recurse$lbmem_2_0$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_2_0$mem.raddr"],
          ["lb32_inst$lb_recurse$lbmem_4_0$mem.wdata","lb32_inst$lb_recurse$lbmem_2_0$mem.rdata"],
          ["self.out.2.4","lb32_inst$lb_recurse$lbmem_2_0$mem.rdata"],
          ["lb32_inst$lb_recurse$lbmem_2_0$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_2_0$mem.waddr"],
          ["self.in.0.0","lb32_inst$lb_recurse$lbmem_2_0$mem.wdata"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_2_0$mem.wen"],
          ["lb32_inst$lb_recurse$lbmem_2_0$state$reg0.out.0","lb32_inst$lb_recurse$lbmem_2_0$out_and_wen.in0"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_2_0$out_and_wen.in1"],
          ["lb32_inst$lb_recurse$lbmem_2_0$raddr$r$enMux.sel","lb32_inst$lb_recurse$lbmem_2_0$out_and_wen.out"],
          ["lb32_inst$lb_recurse$lbmem_2_0$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_2_0$raddr$add.in0"],
          ["lb32_inst$lb_recurse$lbmem_2_0$raddr$c1.out","lb32_inst$lb_recurse$lbmem_2_0$raddr$add.in1"],
          ["lb32_inst$lb_recurse$lbmem_2_0$raddr$mux.in0","lb32_inst$lb_recurse$lbmem_2_0$raddr$add.out"],
          ["lb32_inst$lb_recurse$lbmem_2_0$raddr$mux.in1","lb32_inst$lb_recurse$lbmem_2_0$raddr$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_2_0$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_2_0$raddr$eq.in0"],
          ["lb32_inst$lb_recurse$lbmem_2_0$raddr$maxval.out","lb32_inst$lb_recurse$lbmem_2_0$raddr$eq.in1"],
          ["lb32_inst$lb_recurse$lbmem_2_0$raddr$mux.sel","lb32_inst$lb_recurse$lbmem_2_0$raddr$eq.out"],
          ["lb32_inst$lb_recurse$lbmem_2_0$raddr$r$enMux.in1","lb32_inst$lb_recurse$lbmem_2_0$raddr$mux.out"],
          ["lb32_inst$lb_recurse$lbmem_2_0$raddr$r$clrMux.in1","lb32_inst$lb_recurse$lbmem_2_0$raddr$r$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_2_0$raddr$r$enMux.out","lb32_inst$lb_recurse$lbmem_2_0$raddr$r$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_2_0$raddr$r$reg0.in","lb32_inst$lb_recurse$lbmem_2_0$raddr$r$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_2_0_flush.out","lb32_inst$lb_recurse$lbmem_2_0$raddr$r$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_2_0$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_2_0$raddr$r$enMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_2_0$state$clrMux.in1","lb32_inst$lb_recurse$lbmem_2_0$state$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_2_0$state$enMux.out","lb32_inst$lb_recurse$lbmem_2_0$state$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_2_0$state$reg0.in","lb32_inst$lb_recurse$lbmem_2_0$state$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_2_0_flush.out","lb32_inst$lb_recurse$lbmem_2_0$state$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_2_0$state$reg0.out","lb32_inst$lb_recurse$lbmem_2_0$state$enMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_2_0$state0.in","lb32_inst$lb_recurse$lbmem_2_0$state$reg0.out.0"],
          ["lb32_inst$lb_recurse$lbmem_2_0$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_2_0$waddr$add.in0"],
          ["lb32_inst$lb_recurse$lbmem_2_0$waddr$c1.out","lb32_inst$lb_recurse$lbmem_2_0$waddr$add.in1"],
          ["lb32_inst$lb_recurse$lbmem_2_0$waddr$mux.in0","lb32_inst$lb_recurse$lbmem_2_0$waddr$add.out"],
          ["lb32_inst$lb_recurse$lbmem_2_0$waddr$mux.in1","lb32_inst$lb_recurse$lbmem_2_0$waddr$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_2_0$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_2_0$waddr$eq.in0"],
          ["lb32_inst$lb_recurse$lbmem_2_0$waddr$maxval.out","lb32_inst$lb_recurse$lbmem_2_0$waddr$eq.in1"],
          ["lb32_inst$lb_recurse$lbmem_2_0$waddr$mux.sel","lb32_inst$lb_recurse$lbmem_2_0$waddr$eq.out"],
          ["lb32_inst$lb_recurse$lbmem_2_0$waddr$r$enMux.in1","lb32_inst$lb_recurse$lbmem_2_0$waddr$mux.out"],
          ["lb32_inst$lb_recurse$lbmem_2_0$waddr$r$clrMux.in1","lb32_inst$lb_recurse$lbmem_2_0$waddr$r$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_2_0$waddr$r$enMux.out","lb32_inst$lb_recurse$lbmem_2_0$waddr$r$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_2_0$waddr$r$reg0.in","lb32_inst$lb_recurse$lbmem_2_0$waddr$r$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_2_0_flush.out","lb32_inst$lb_recurse$lbmem_2_0$waddr$r$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_2_0$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_2_0$waddr$r$enMux.in0"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_2_0$waddr$r$enMux.sel"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_2_0$wen_ext.in.0"],
          ["lb32_inst$lb_recurse$lbmem_2_1$wen_ext.out","lb32_inst$lb_recurse$lbmem_2_1$add_wen.in0"],
          ["lb32_inst$lb_recurse$lbmem_2_1$cnt$reg0.out","lb32_inst$lb_recurse$lbmem_2_1$add_wen.in1"],
          ["lb32_inst$lb_recurse$lbmem_2_1$cnt$enMux.in1","lb32_inst$lb_recurse$lbmem_2_1$add_wen.out"],
          ["lb32_inst$lb_recurse$lbmem_2_1$eq_depth.in1","lb32_inst$lb_recurse$lbmem_2_1$add_wen.out"],
          ["lb32_inst$lb_recurse$lbmem_2_1$state$enMux.in1.0","lb32_inst$lb_recurse$lbmem_2_1$c1.out"],
          ["lb32_inst$lb_recurse$lbmem_2_1$cnt$clrMux.in1","lb32_inst$lb_recurse$lbmem_2_1$cnt$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_2_1$cnt$enMux.out","lb32_inst$lb_recurse$lbmem_2_1$cnt$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_2_1$cnt$reg0.in","lb32_inst$lb_recurse$lbmem_2_1$cnt$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_2_1_flush.out","lb32_inst$lb_recurse$lbmem_2_1$cnt$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_2_1$cnt$reg0.out","lb32_inst$lb_recurse$lbmem_2_1$cnt$enMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_2_1$state0.out","lb32_inst$lb_recurse$lbmem_2_1$cnt$enMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_2_1$eq_depth.in0","lb32_inst$lb_recurse$lbmem_2_1$depth_m1.out"],
          ["lb32_inst$lb_recurse$lbmem_2_1$state$enMux.sel","lb32_inst$lb_recurse$lbmem_2_1$eq_depth.out"],
          ["lb32_inst$lb_recurse$lbmem_2_1$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_2_1$mem.raddr"],
          ["lb32_inst$lb_recurse$lbmem_4_1$mem.wdata","lb32_inst$lb_recurse$lbmem_2_1$mem.rdata"],
          ["self.out.2.5","lb32_inst$lb_recurse$lbmem_2_1$mem.rdata"],
          ["lb32_inst$lb_recurse$lbmem_2_1$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_2_1$mem.waddr"],
          ["self.in.0.1","lb32_inst$lb_recurse$lbmem_2_1$mem.wdata"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_2_1$mem.wen"],
          ["lb32_inst$lb_recurse$lbmem_2_1$state$reg0.out.0","lb32_inst$lb_recurse$lbmem_2_1$out_and_wen.in0"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_2_1$out_and_wen.in1"],
          ["lb32_inst$lb_recurse$lbmem_2_1$raddr$r$enMux.sel","lb32_inst$lb_recurse$lbmem_2_1$out_and_wen.out"],
          ["lb32_inst$lb_recurse$lbmem_2_1$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_2_1$raddr$add.in0"],
          ["lb32_inst$lb_recurse$lbmem_2_1$raddr$c1.out","lb32_inst$lb_recurse$lbmem_2_1$raddr$add.in1"],
          ["lb32_inst$lb_recurse$lbmem_2_1$raddr$mux.in0","lb32_inst$lb_recurse$lbmem_2_1$raddr$add.out"],
          ["lb32_inst$lb_recurse$lbmem_2_1$raddr$mux.in1","lb32_inst$lb_recurse$lbmem_2_1$raddr$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_2_1$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_2_1$raddr$eq.in0"],
          ["lb32_inst$lb_recurse$lbmem_2_1$raddr$maxval.out","lb32_inst$lb_recurse$lbmem_2_1$raddr$eq.in1"],
          ["lb32_inst$lb_recurse$lbmem_2_1$raddr$mux.sel","lb32_inst$lb_recurse$lbmem_2_1$raddr$eq.out"],
          ["lb32_inst$lb_recurse$lbmem_2_1$raddr$r$enMux.in1","lb32_inst$lb_recurse$lbmem_2_1$raddr$mux.out"],
          ["lb32_inst$lb_recurse$lbmem_2_1$raddr$r$clrMux.in1","lb32_inst$lb_recurse$lbmem_2_1$raddr$r$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_2_1$raddr$r$enMux.out","lb32_inst$lb_recurse$lbmem_2_1$raddr$r$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_2_1$raddr$r$reg0.in","lb32_inst$lb_recurse$lbmem_2_1$raddr$r$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_2_1_flush.out","lb32_inst$lb_recurse$lbmem_2_1$raddr$r$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_2_1$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_2_1$raddr$r$enMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_2_1$state$clrMux.in1","lb32_inst$lb_recurse$lbmem_2_1$state$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_2_1$state$enMux.out","lb32_inst$lb_recurse$lbmem_2_1$state$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_2_1$state$reg0.in","lb32_inst$lb_recurse$lbmem_2_1$state$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_2_1_flush.out","lb32_inst$lb_recurse$lbmem_2_1$state$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_2_1$state$reg0.out","lb32_inst$lb_recurse$lbmem_2_1$state$enMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_2_1$state0.in","lb32_inst$lb_recurse$lbmem_2_1$state$reg0.out.0"],
          ["lb32_inst$lb_recurse$lbmem_2_1$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_2_1$waddr$add.in0"],
          ["lb32_inst$lb_recurse$lbmem_2_1$waddr$c1.out","lb32_inst$lb_recurse$lbmem_2_1$waddr$add.in1"],
          ["lb32_inst$lb_recurse$lbmem_2_1$waddr$mux.in0","lb32_inst$lb_recurse$lbmem_2_1$waddr$add.out"],
          ["lb32_inst$lb_recurse$lbmem_2_1$waddr$mux.in1","lb32_inst$lb_recurse$lbmem_2_1$waddr$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_2_1$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_2_1$waddr$eq.in0"],
          ["lb32_inst$lb_recurse$lbmem_2_1$waddr$maxval.out","lb32_inst$lb_recurse$lbmem_2_1$waddr$eq.in1"],
          ["lb32_inst$lb_recurse$lbmem_2_1$waddr$mux.sel","lb32_inst$lb_recurse$lbmem_2_1$waddr$eq.out"],
          ["lb32_inst$lb_recurse$lbmem_2_1$waddr$r$enMux.in1","lb32_inst$lb_recurse$lbmem_2_1$waddr$mux.out"],
          ["lb32_inst$lb_recurse$lbmem_2_1$waddr$r$clrMux.in1","lb32_inst$lb_recurse$lbmem_2_1$waddr$r$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_2_1$waddr$r$enMux.out","lb32_inst$lb_recurse$lbmem_2_1$waddr$r$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_2_1$waddr$r$reg0.in","lb32_inst$lb_recurse$lbmem_2_1$waddr$r$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_2_1_flush.out","lb32_inst$lb_recurse$lbmem_2_1$waddr$r$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_2_1$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_2_1$waddr$r$enMux.in0"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_2_1$waddr$r$enMux.sel"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_2_1$wen_ext.in.0"],
          ["lb32_inst$lb_recurse$lbmem_3_0$wen_ext.out","lb32_inst$lb_recurse$lbmem_3_0$add_wen.in0"],
          ["lb32_inst$lb_recurse$lbmem_3_0$cnt$reg0.out","lb32_inst$lb_recurse$lbmem_3_0$add_wen.in1"],
          ["lb32_inst$lb_recurse$lbmem_3_0$cnt$enMux.in1","lb32_inst$lb_recurse$lbmem_3_0$add_wen.out"],
          ["lb32_inst$lb_recurse$lbmem_3_0$eq_depth.in1","lb32_inst$lb_recurse$lbmem_3_0$add_wen.out"],
          ["lb32_inst$lb_recurse$lbmem_3_0$state$enMux.in1.0","lb32_inst$lb_recurse$lbmem_3_0$c1.out"],
          ["lb32_inst$lb_recurse$lbmem_3_0$cnt$clrMux.in1","lb32_inst$lb_recurse$lbmem_3_0$cnt$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_3_0$cnt$enMux.out","lb32_inst$lb_recurse$lbmem_3_0$cnt$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_3_0$cnt$reg0.in","lb32_inst$lb_recurse$lbmem_3_0$cnt$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_3_0_flush.out","lb32_inst$lb_recurse$lbmem_3_0$cnt$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_3_0$cnt$reg0.out","lb32_inst$lb_recurse$lbmem_3_0$cnt$enMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_3_0$state0.out","lb32_inst$lb_recurse$lbmem_3_0$cnt$enMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_3_0$eq_depth.in0","lb32_inst$lb_recurse$lbmem_3_0$depth_m1.out"],
          ["lb32_inst$lb_recurse$lbmem_3_0$state$enMux.sel","lb32_inst$lb_recurse$lbmem_3_0$eq_depth.out"],
          ["lb32_inst$lb_recurse$lbmem_3_0$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_3_0$mem.raddr"],
          ["lb32_inst$lb_recurse$lbmem_5_0$mem.wdata","lb32_inst$lb_recurse$lbmem_3_0$mem.rdata"],
          ["self.out.3.4","lb32_inst$lb_recurse$lbmem_3_0$mem.rdata"],
          ["lb32_inst$lb_recurse$lbmem_3_0$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_3_0$mem.waddr"],
          ["self.in.1.0","lb32_inst$lb_recurse$lbmem_3_0$mem.wdata"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_3_0$mem.wen"],
          ["lb32_inst$lb_recurse$lbmem_3_0$state$reg0.out.0","lb32_inst$lb_recurse$lbmem_3_0$out_and_wen.in0"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_3_0$out_and_wen.in1"],
          ["lb32_inst$lb_recurse$lbmem_3_0$raddr$r$enMux.sel","lb32_inst$lb_recurse$lbmem_3_0$out_and_wen.out"],
          ["lb32_inst$lb_recurse$lbmem_3_0$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_3_0$raddr$add.in0"],
          ["lb32_inst$lb_recurse$lbmem_3_0$raddr$c1.out","lb32_inst$lb_recurse$lbmem_3_0$raddr$add.in1"],
          ["lb32_inst$lb_recurse$lbmem_3_0$raddr$mux.in0","lb32_inst$lb_recurse$lbmem_3_0$raddr$add.out"],
          ["lb32_inst$lb_recurse$lbmem_3_0$raddr$mux.in1","lb32_inst$lb_recurse$lbmem_3_0$raddr$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_3_0$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_3_0$raddr$eq.in0"],
          ["lb32_inst$lb_recurse$lbmem_3_0$raddr$maxval.out","lb32_inst$lb_recurse$lbmem_3_0$raddr$eq.in1"],
          ["lb32_inst$lb_recurse$lbmem_3_0$raddr$mux.sel","lb32_inst$lb_recurse$lbmem_3_0$raddr$eq.out"],
          ["lb32_inst$lb_recurse$lbmem_3_0$raddr$r$enMux.in1","lb32_inst$lb_recurse$lbmem_3_0$raddr$mux.out"],
          ["lb32_inst$lb_recurse$lbmem_3_0$raddr$r$clrMux.in1","lb32_inst$lb_recurse$lbmem_3_0$raddr$r$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_3_0$raddr$r$enMux.out","lb32_inst$lb_recurse$lbmem_3_0$raddr$r$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_3_0$raddr$r$reg0.in","lb32_inst$lb_recurse$lbmem_3_0$raddr$r$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_3_0_flush.out","lb32_inst$lb_recurse$lbmem_3_0$raddr$r$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_3_0$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_3_0$raddr$r$enMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_3_0$state$clrMux.in1","lb32_inst$lb_recurse$lbmem_3_0$state$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_3_0$state$enMux.out","lb32_inst$lb_recurse$lbmem_3_0$state$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_3_0$state$reg0.in","lb32_inst$lb_recurse$lbmem_3_0$state$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_3_0_flush.out","lb32_inst$lb_recurse$lbmem_3_0$state$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_3_0$state$reg0.out","lb32_inst$lb_recurse$lbmem_3_0$state$enMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_3_0$state0.in","lb32_inst$lb_recurse$lbmem_3_0$state$reg0.out.0"],
          ["lb32_inst$lb_recurse$lbmem_3_0$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_3_0$waddr$add.in0"],
          ["lb32_inst$lb_recurse$lbmem_3_0$waddr$c1.out","lb32_inst$lb_recurse$lbmem_3_0$waddr$add.in1"],
          ["lb32_inst$lb_recurse$lbmem_3_0$waddr$mux.in0","lb32_inst$lb_recurse$lbmem_3_0$waddr$add.out"],
          ["lb32_inst$lb_recurse$lbmem_3_0$waddr$mux.in1","lb32_inst$lb_recurse$lbmem_3_0$waddr$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_3_0$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_3_0$waddr$eq.in0"],
          ["lb32_inst$lb_recurse$lbmem_3_0$waddr$maxval.out","lb32_inst$lb_recurse$lbmem_3_0$waddr$eq.in1"],
          ["lb32_inst$lb_recurse$lbmem_3_0$waddr$mux.sel","lb32_inst$lb_recurse$lbmem_3_0$waddr$eq.out"],
          ["lb32_inst$lb_recurse$lbmem_3_0$waddr$r$enMux.in1","lb32_inst$lb_recurse$lbmem_3_0$waddr$mux.out"],
          ["lb32_inst$lb_recurse$lbmem_3_0$waddr$r$clrMux.in1","lb32_inst$lb_recurse$lbmem_3_0$waddr$r$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_3_0$waddr$r$enMux.out","lb32_inst$lb_recurse$lbmem_3_0$waddr$r$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_3_0$waddr$r$reg0.in","lb32_inst$lb_recurse$lbmem_3_0$waddr$r$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_3_0_flush.out","lb32_inst$lb_recurse$lbmem_3_0$waddr$r$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_3_0$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_3_0$waddr$r$enMux.in0"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_3_0$waddr$r$enMux.sel"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_3_0$wen_ext.in.0"],
          ["lb32_inst$lb_recurse$lbmem_3_1$wen_ext.out","lb32_inst$lb_recurse$lbmem_3_1$add_wen.in0"],
          ["lb32_inst$lb_recurse$lbmem_3_1$cnt$reg0.out","lb32_inst$lb_recurse$lbmem_3_1$add_wen.in1"],
          ["lb32_inst$lb_recurse$lbmem_3_1$cnt$enMux.in1","lb32_inst$lb_recurse$lbmem_3_1$add_wen.out"],
          ["lb32_inst$lb_recurse$lbmem_3_1$eq_depth.in1","lb32_inst$lb_recurse$lbmem_3_1$add_wen.out"],
          ["lb32_inst$lb_recurse$lbmem_3_1$state$enMux.in1.0","lb32_inst$lb_recurse$lbmem_3_1$c1.out"],
          ["lb32_inst$lb_recurse$lbmem_3_1$cnt$clrMux.in1","lb32_inst$lb_recurse$lbmem_3_1$cnt$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_3_1$cnt$enMux.out","lb32_inst$lb_recurse$lbmem_3_1$cnt$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_3_1$cnt$reg0.in","lb32_inst$lb_recurse$lbmem_3_1$cnt$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_3_1_flush.out","lb32_inst$lb_recurse$lbmem_3_1$cnt$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_3_1$cnt$reg0.out","lb32_inst$lb_recurse$lbmem_3_1$cnt$enMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_3_1$state0.out","lb32_inst$lb_recurse$lbmem_3_1$cnt$enMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_3_1$eq_depth.in0","lb32_inst$lb_recurse$lbmem_3_1$depth_m1.out"],
          ["lb32_inst$lb_recurse$lbmem_3_1$state$enMux.sel","lb32_inst$lb_recurse$lbmem_3_1$eq_depth.out"],
          ["lb32_inst$lb_recurse$lbmem_3_1$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_3_1$mem.raddr"],
          ["lb32_inst$lb_recurse$lbmem_5_1$mem.wdata","lb32_inst$lb_recurse$lbmem_3_1$mem.rdata"],
          ["self.out.3.5","lb32_inst$lb_recurse$lbmem_3_1$mem.rdata"],
          ["lb32_inst$lb_recurse$lbmem_3_1$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_3_1$mem.waddr"],
          ["self.in.1.1","lb32_inst$lb_recurse$lbmem_3_1$mem.wdata"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_3_1$mem.wen"],
          ["lb32_inst$lb_recurse$lbmem_3_1$state$reg0.out.0","lb32_inst$lb_recurse$lbmem_3_1$out_and_wen.in0"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_3_1$out_and_wen.in1"],
          ["lb32_inst$lb_recurse$lbmem_3_1$raddr$r$enMux.sel","lb32_inst$lb_recurse$lbmem_3_1$out_and_wen.out"],
          ["lb32_inst$lb_recurse$lbmem_3_1$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_3_1$raddr$add.in0"],
          ["lb32_inst$lb_recurse$lbmem_3_1$raddr$c1.out","lb32_inst$lb_recurse$lbmem_3_1$raddr$add.in1"],
          ["lb32_inst$lb_recurse$lbmem_3_1$raddr$mux.in0","lb32_inst$lb_recurse$lbmem_3_1$raddr$add.out"],
          ["lb32_inst$lb_recurse$lbmem_3_1$raddr$mux.in1","lb32_inst$lb_recurse$lbmem_3_1$raddr$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_3_1$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_3_1$raddr$eq.in0"],
          ["lb32_inst$lb_recurse$lbmem_3_1$raddr$maxval.out","lb32_inst$lb_recurse$lbmem_3_1$raddr$eq.in1"],
          ["lb32_inst$lb_recurse$lbmem_3_1$raddr$mux.sel","lb32_inst$lb_recurse$lbmem_3_1$raddr$eq.out"],
          ["lb32_inst$lb_recurse$lbmem_3_1$raddr$r$enMux.in1","lb32_inst$lb_recurse$lbmem_3_1$raddr$mux.out"],
          ["lb32_inst$lb_recurse$lbmem_3_1$raddr$r$clrMux.in1","lb32_inst$lb_recurse$lbmem_3_1$raddr$r$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_3_1$raddr$r$enMux.out","lb32_inst$lb_recurse$lbmem_3_1$raddr$r$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_3_1$raddr$r$reg0.in","lb32_inst$lb_recurse$lbmem_3_1$raddr$r$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_3_1_flush.out","lb32_inst$lb_recurse$lbmem_3_1$raddr$r$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_3_1$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_3_1$raddr$r$enMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_3_1$state$clrMux.in1","lb32_inst$lb_recurse$lbmem_3_1$state$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_3_1$state$enMux.out","lb32_inst$lb_recurse$lbmem_3_1$state$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_3_1$state$reg0.in","lb32_inst$lb_recurse$lbmem_3_1$state$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_3_1_flush.out","lb32_inst$lb_recurse$lbmem_3_1$state$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_3_1$state$reg0.out","lb32_inst$lb_recurse$lbmem_3_1$state$enMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_3_1$state0.in","lb32_inst$lb_recurse$lbmem_3_1$state$reg0.out.0"],
          ["lb32_inst$lb_recurse$lbmem_3_1$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_3_1$waddr$add.in0"],
          ["lb32_inst$lb_recurse$lbmem_3_1$waddr$c1.out","lb32_inst$lb_recurse$lbmem_3_1$waddr$add.in1"],
          ["lb32_inst$lb_recurse$lbmem_3_1$waddr$mux.in0","lb32_inst$lb_recurse$lbmem_3_1$waddr$add.out"],
          ["lb32_inst$lb_recurse$lbmem_3_1$waddr$mux.in1","lb32_inst$lb_recurse$lbmem_3_1$waddr$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_3_1$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_3_1$waddr$eq.in0"],
          ["lb32_inst$lb_recurse$lbmem_3_1$waddr$maxval.out","lb32_inst$lb_recurse$lbmem_3_1$waddr$eq.in1"],
          ["lb32_inst$lb_recurse$lbmem_3_1$waddr$mux.sel","lb32_inst$lb_recurse$lbmem_3_1$waddr$eq.out"],
          ["lb32_inst$lb_recurse$lbmem_3_1$waddr$r$enMux.in1","lb32_inst$lb_recurse$lbmem_3_1$waddr$mux.out"],
          ["lb32_inst$lb_recurse$lbmem_3_1$waddr$r$clrMux.in1","lb32_inst$lb_recurse$lbmem_3_1$waddr$r$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_3_1$waddr$r$enMux.out","lb32_inst$lb_recurse$lbmem_3_1$waddr$r$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_3_1$waddr$r$reg0.in","lb32_inst$lb_recurse$lbmem_3_1$waddr$r$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_3_1_flush.out","lb32_inst$lb_recurse$lbmem_3_1$waddr$r$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_3_1$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_3_1$waddr$r$enMux.in0"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_3_1$waddr$r$enMux.sel"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_3_1$wen_ext.in.0"],
          ["lb32_inst$lb_recurse$lbmem_4_0$wen_ext.out","lb32_inst$lb_recurse$lbmem_4_0$add_wen.in0"],
          ["lb32_inst$lb_recurse$lbmem_4_0$cnt$reg0.out","lb32_inst$lb_recurse$lbmem_4_0$add_wen.in1"],
          ["lb32_inst$lb_recurse$lbmem_4_0$cnt$enMux.in1","lb32_inst$lb_recurse$lbmem_4_0$add_wen.out"],
          ["lb32_inst$lb_recurse$lbmem_4_0$eq_depth.in1","lb32_inst$lb_recurse$lbmem_4_0$add_wen.out"],
          ["lb32_inst$lb_recurse$lbmem_4_0$state$enMux.in1.0","lb32_inst$lb_recurse$lbmem_4_0$c1.out"],
          ["lb32_inst$lb_recurse$lbmem_4_0$cnt$clrMux.in1","lb32_inst$lb_recurse$lbmem_4_0$cnt$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_4_0$cnt$enMux.out","lb32_inst$lb_recurse$lbmem_4_0$cnt$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_4_0$cnt$reg0.in","lb32_inst$lb_recurse$lbmem_4_0$cnt$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_4_0_flush.out","lb32_inst$lb_recurse$lbmem_4_0$cnt$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_4_0$cnt$reg0.out","lb32_inst$lb_recurse$lbmem_4_0$cnt$enMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_4_0$state0.out","lb32_inst$lb_recurse$lbmem_4_0$cnt$enMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_4_0$eq_depth.in0","lb32_inst$lb_recurse$lbmem_4_0$depth_m1.out"],
          ["lb32_inst$lb_recurse$lbmem_4_0$state$enMux.sel","lb32_inst$lb_recurse$lbmem_4_0$eq_depth.out"],
          ["lb32_inst$lb_recurse$lbmem_4_0$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_4_0$mem.raddr"],
          ["self.out.0.4","lb32_inst$lb_recurse$lbmem_4_0$mem.rdata"],
          ["lb32_inst$lb_recurse$lbmem_4_0$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_4_0$mem.waddr"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_4_0$mem.wen"],
          ["lb32_inst$lb_recurse$lbmem_4_0$state$reg0.out.0","lb32_inst$lb_recurse$lbmem_4_0$out_and_wen.in0"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_4_0$out_and_wen.in1"],
          ["lb32_inst$lb_recurse$lbmem_4_0$raddr$r$enMux.sel","lb32_inst$lb_recurse$lbmem_4_0$out_and_wen.out"],
          ["lb32_inst$lb_recurse$lbmem_4_0$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_4_0$raddr$add.in0"],
          ["lb32_inst$lb_recurse$lbmem_4_0$raddr$c1.out","lb32_inst$lb_recurse$lbmem_4_0$raddr$add.in1"],
          ["lb32_inst$lb_recurse$lbmem_4_0$raddr$mux.in0","lb32_inst$lb_recurse$lbmem_4_0$raddr$add.out"],
          ["lb32_inst$lb_recurse$lbmem_4_0$raddr$mux.in1","lb32_inst$lb_recurse$lbmem_4_0$raddr$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_4_0$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_4_0$raddr$eq.in0"],
          ["lb32_inst$lb_recurse$lbmem_4_0$raddr$maxval.out","lb32_inst$lb_recurse$lbmem_4_0$raddr$eq.in1"],
          ["lb32_inst$lb_recurse$lbmem_4_0$raddr$mux.sel","lb32_inst$lb_recurse$lbmem_4_0$raddr$eq.out"],
          ["lb32_inst$lb_recurse$lbmem_4_0$raddr$r$enMux.in1","lb32_inst$lb_recurse$lbmem_4_0$raddr$mux.out"],
          ["lb32_inst$lb_recurse$lbmem_4_0$raddr$r$clrMux.in1","lb32_inst$lb_recurse$lbmem_4_0$raddr$r$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_4_0$raddr$r$enMux.out","lb32_inst$lb_recurse$lbmem_4_0$raddr$r$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_4_0$raddr$r$reg0.in","lb32_inst$lb_recurse$lbmem_4_0$raddr$r$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_4_0_flush.out","lb32_inst$lb_recurse$lbmem_4_0$raddr$r$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_4_0$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_4_0$raddr$r$enMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_4_0$state$clrMux.in1","lb32_inst$lb_recurse$lbmem_4_0$state$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_4_0$state$enMux.out","lb32_inst$lb_recurse$lbmem_4_0$state$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_4_0$state$reg0.in","lb32_inst$lb_recurse$lbmem_4_0$state$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_4_0_flush.out","lb32_inst$lb_recurse$lbmem_4_0$state$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_4_0$state$reg0.out","lb32_inst$lb_recurse$lbmem_4_0$state$enMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_4_0$state0.in","lb32_inst$lb_recurse$lbmem_4_0$state$reg0.out.0"],
          ["lb32_inst$lb_recurse$lbmem_4_0$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_4_0$waddr$add.in0"],
          ["lb32_inst$lb_recurse$lbmem_4_0$waddr$c1.out","lb32_inst$lb_recurse$lbmem_4_0$waddr$add.in1"],
          ["lb32_inst$lb_recurse$lbmem_4_0$waddr$mux.in0","lb32_inst$lb_recurse$lbmem_4_0$waddr$add.out"],
          ["lb32_inst$lb_recurse$lbmem_4_0$waddr$mux.in1","lb32_inst$lb_recurse$lbmem_4_0$waddr$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_4_0$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_4_0$waddr$eq.in0"],
          ["lb32_inst$lb_recurse$lbmem_4_0$waddr$maxval.out","lb32_inst$lb_recurse$lbmem_4_0$waddr$eq.in1"],
          ["lb32_inst$lb_recurse$lbmem_4_0$waddr$mux.sel","lb32_inst$lb_recurse$lbmem_4_0$waddr$eq.out"],
          ["lb32_inst$lb_recurse$lbmem_4_0$waddr$r$enMux.in1","lb32_inst$lb_recurse$lbmem_4_0$waddr$mux.out"],
          ["lb32_inst$lb_recurse$lbmem_4_0$waddr$r$clrMux.in1","lb32_inst$lb_recurse$lbmem_4_0$waddr$r$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_4_0$waddr$r$enMux.out","lb32_inst$lb_recurse$lbmem_4_0$waddr$r$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_4_0$waddr$r$reg0.in","lb32_inst$lb_recurse$lbmem_4_0$waddr$r$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_4_0_flush.out","lb32_inst$lb_recurse$lbmem_4_0$waddr$r$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_4_0$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_4_0$waddr$r$enMux.in0"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_4_0$waddr$r$enMux.sel"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_4_0$wen_ext.in.0"],
          ["lb32_inst$lb_recurse$lbmem_4_1$wen_ext.out","lb32_inst$lb_recurse$lbmem_4_1$add_wen.in0"],
          ["lb32_inst$lb_recurse$lbmem_4_1$cnt$reg0.out","lb32_inst$lb_recurse$lbmem_4_1$add_wen.in1"],
          ["lb32_inst$lb_recurse$lbmem_4_1$cnt$enMux.in1","lb32_inst$lb_recurse$lbmem_4_1$add_wen.out"],
          ["lb32_inst$lb_recurse$lbmem_4_1$eq_depth.in1","lb32_inst$lb_recurse$lbmem_4_1$add_wen.out"],
          ["lb32_inst$lb_recurse$lbmem_4_1$state$enMux.in1.0","lb32_inst$lb_recurse$lbmem_4_1$c1.out"],
          ["lb32_inst$lb_recurse$lbmem_4_1$cnt$clrMux.in1","lb32_inst$lb_recurse$lbmem_4_1$cnt$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_4_1$cnt$enMux.out","lb32_inst$lb_recurse$lbmem_4_1$cnt$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_4_1$cnt$reg0.in","lb32_inst$lb_recurse$lbmem_4_1$cnt$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_4_1_flush.out","lb32_inst$lb_recurse$lbmem_4_1$cnt$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_4_1$cnt$reg0.out","lb32_inst$lb_recurse$lbmem_4_1$cnt$enMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_4_1$state0.out","lb32_inst$lb_recurse$lbmem_4_1$cnt$enMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_4_1$eq_depth.in0","lb32_inst$lb_recurse$lbmem_4_1$depth_m1.out"],
          ["lb32_inst$lb_recurse$lbmem_4_1$state$enMux.sel","lb32_inst$lb_recurse$lbmem_4_1$eq_depth.out"],
          ["lb32_inst$lb_recurse$lbmem_4_1$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_4_1$mem.raddr"],
          ["self.out.0.5","lb32_inst$lb_recurse$lbmem_4_1$mem.rdata"],
          ["lb32_inst$lb_recurse$lbmem_4_1$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_4_1$mem.waddr"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_4_1$mem.wen"],
          ["lb32_inst$lb_recurse$lbmem_4_1$state$reg0.out.0","lb32_inst$lb_recurse$lbmem_4_1$out_and_wen.in0"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_4_1$out_and_wen.in1"],
          ["lb32_inst$lb_recurse$lbmem_4_1$raddr$r$enMux.sel","lb32_inst$lb_recurse$lbmem_4_1$out_and_wen.out"],
          ["lb32_inst$lb_recurse$lbmem_4_1$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_4_1$raddr$add.in0"],
          ["lb32_inst$lb_recurse$lbmem_4_1$raddr$c1.out","lb32_inst$lb_recurse$lbmem_4_1$raddr$add.in1"],
          ["lb32_inst$lb_recurse$lbmem_4_1$raddr$mux.in0","lb32_inst$lb_recurse$lbmem_4_1$raddr$add.out"],
          ["lb32_inst$lb_recurse$lbmem_4_1$raddr$mux.in1","lb32_inst$lb_recurse$lbmem_4_1$raddr$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_4_1$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_4_1$raddr$eq.in0"],
          ["lb32_inst$lb_recurse$lbmem_4_1$raddr$maxval.out","lb32_inst$lb_recurse$lbmem_4_1$raddr$eq.in1"],
          ["lb32_inst$lb_recurse$lbmem_4_1$raddr$mux.sel","lb32_inst$lb_recurse$lbmem_4_1$raddr$eq.out"],
          ["lb32_inst$lb_recurse$lbmem_4_1$raddr$r$enMux.in1","lb32_inst$lb_recurse$lbmem_4_1$raddr$mux.out"],
          ["lb32_inst$lb_recurse$lbmem_4_1$raddr$r$clrMux.in1","lb32_inst$lb_recurse$lbmem_4_1$raddr$r$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_4_1$raddr$r$enMux.out","lb32_inst$lb_recurse$lbmem_4_1$raddr$r$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_4_1$raddr$r$reg0.in","lb32_inst$lb_recurse$lbmem_4_1$raddr$r$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_4_1_flush.out","lb32_inst$lb_recurse$lbmem_4_1$raddr$r$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_4_1$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_4_1$raddr$r$enMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_4_1$state$clrMux.in1","lb32_inst$lb_recurse$lbmem_4_1$state$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_4_1$state$enMux.out","lb32_inst$lb_recurse$lbmem_4_1$state$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_4_1$state$reg0.in","lb32_inst$lb_recurse$lbmem_4_1$state$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_4_1_flush.out","lb32_inst$lb_recurse$lbmem_4_1$state$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_4_1$state$reg0.out","lb32_inst$lb_recurse$lbmem_4_1$state$enMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_4_1$state0.in","lb32_inst$lb_recurse$lbmem_4_1$state$reg0.out.0"],
          ["lb32_inst$lb_recurse$lbmem_4_1$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_4_1$waddr$add.in0"],
          ["lb32_inst$lb_recurse$lbmem_4_1$waddr$c1.out","lb32_inst$lb_recurse$lbmem_4_1$waddr$add.in1"],
          ["lb32_inst$lb_recurse$lbmem_4_1$waddr$mux.in0","lb32_inst$lb_recurse$lbmem_4_1$waddr$add.out"],
          ["lb32_inst$lb_recurse$lbmem_4_1$waddr$mux.in1","lb32_inst$lb_recurse$lbmem_4_1$waddr$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_4_1$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_4_1$waddr$eq.in0"],
          ["lb32_inst$lb_recurse$lbmem_4_1$waddr$maxval.out","lb32_inst$lb_recurse$lbmem_4_1$waddr$eq.in1"],
          ["lb32_inst$lb_recurse$lbmem_4_1$waddr$mux.sel","lb32_inst$lb_recurse$lbmem_4_1$waddr$eq.out"],
          ["lb32_inst$lb_recurse$lbmem_4_1$waddr$r$enMux.in1","lb32_inst$lb_recurse$lbmem_4_1$waddr$mux.out"],
          ["lb32_inst$lb_recurse$lbmem_4_1$waddr$r$clrMux.in1","lb32_inst$lb_recurse$lbmem_4_1$waddr$r$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_4_1$waddr$r$enMux.out","lb32_inst$lb_recurse$lbmem_4_1$waddr$r$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_4_1$waddr$r$reg0.in","lb32_inst$lb_recurse$lbmem_4_1$waddr$r$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_4_1_flush.out","lb32_inst$lb_recurse$lbmem_4_1$waddr$r$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_4_1$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_4_1$waddr$r$enMux.in0"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_4_1$waddr$r$enMux.sel"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_4_1$wen_ext.in.0"],
          ["lb32_inst$lb_recurse$lbmem_5_0$wen_ext.out","lb32_inst$lb_recurse$lbmem_5_0$add_wen.in0"],
          ["lb32_inst$lb_recurse$lbmem_5_0$cnt$reg0.out","lb32_inst$lb_recurse$lbmem_5_0$add_wen.in1"],
          ["lb32_inst$lb_recurse$lbmem_5_0$cnt$enMux.in1","lb32_inst$lb_recurse$lbmem_5_0$add_wen.out"],
          ["lb32_inst$lb_recurse$lbmem_5_0$eq_depth.in1","lb32_inst$lb_recurse$lbmem_5_0$add_wen.out"],
          ["lb32_inst$lb_recurse$lbmem_5_0$state$enMux.in1.0","lb32_inst$lb_recurse$lbmem_5_0$c1.out"],
          ["lb32_inst$lb_recurse$lbmem_5_0$cnt$clrMux.in1","lb32_inst$lb_recurse$lbmem_5_0$cnt$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_5_0$cnt$enMux.out","lb32_inst$lb_recurse$lbmem_5_0$cnt$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_5_0$cnt$reg0.in","lb32_inst$lb_recurse$lbmem_5_0$cnt$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_5_0_flush.out","lb32_inst$lb_recurse$lbmem_5_0$cnt$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_5_0$cnt$reg0.out","lb32_inst$lb_recurse$lbmem_5_0$cnt$enMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_5_0$state0.out","lb32_inst$lb_recurse$lbmem_5_0$cnt$enMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_5_0$eq_depth.in0","lb32_inst$lb_recurse$lbmem_5_0$depth_m1.out"],
          ["lb32_inst$lb_recurse$lbmem_5_0$state$enMux.sel","lb32_inst$lb_recurse$lbmem_5_0$eq_depth.out"],
          ["lb32_inst$lb_recurse$lbmem_5_0$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_5_0$mem.raddr"],
          ["self.out.1.4","lb32_inst$lb_recurse$lbmem_5_0$mem.rdata"],
          ["lb32_inst$lb_recurse$lbmem_5_0$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_5_0$mem.waddr"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_5_0$mem.wen"],
          ["lb32_inst$lb_recurse$lbmem_5_0$state$reg0.out.0","lb32_inst$lb_recurse$lbmem_5_0$out_and_wen.in0"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_5_0$out_and_wen.in1"],
          ["lb32_inst$lb_recurse$lbmem_5_0$raddr$r$enMux.sel","lb32_inst$lb_recurse$lbmem_5_0$out_and_wen.out"],
          ["lb32_inst$lb_recurse$lbmem_5_0$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_5_0$raddr$add.in0"],
          ["lb32_inst$lb_recurse$lbmem_5_0$raddr$c1.out","lb32_inst$lb_recurse$lbmem_5_0$raddr$add.in1"],
          ["lb32_inst$lb_recurse$lbmem_5_0$raddr$mux.in0","lb32_inst$lb_recurse$lbmem_5_0$raddr$add.out"],
          ["lb32_inst$lb_recurse$lbmem_5_0$raddr$mux.in1","lb32_inst$lb_recurse$lbmem_5_0$raddr$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_5_0$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_5_0$raddr$eq.in0"],
          ["lb32_inst$lb_recurse$lbmem_5_0$raddr$maxval.out","lb32_inst$lb_recurse$lbmem_5_0$raddr$eq.in1"],
          ["lb32_inst$lb_recurse$lbmem_5_0$raddr$mux.sel","lb32_inst$lb_recurse$lbmem_5_0$raddr$eq.out"],
          ["lb32_inst$lb_recurse$lbmem_5_0$raddr$r$enMux.in1","lb32_inst$lb_recurse$lbmem_5_0$raddr$mux.out"],
          ["lb32_inst$lb_recurse$lbmem_5_0$raddr$r$clrMux.in1","lb32_inst$lb_recurse$lbmem_5_0$raddr$r$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_5_0$raddr$r$enMux.out","lb32_inst$lb_recurse$lbmem_5_0$raddr$r$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_5_0$raddr$r$reg0.in","lb32_inst$lb_recurse$lbmem_5_0$raddr$r$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_5_0_flush.out","lb32_inst$lb_recurse$lbmem_5_0$raddr$r$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_5_0$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_5_0$raddr$r$enMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_5_0$state$clrMux.in1","lb32_inst$lb_recurse$lbmem_5_0$state$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_5_0$state$enMux.out","lb32_inst$lb_recurse$lbmem_5_0$state$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_5_0$state$reg0.in","lb32_inst$lb_recurse$lbmem_5_0$state$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_5_0_flush.out","lb32_inst$lb_recurse$lbmem_5_0$state$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_5_0$state$reg0.out","lb32_inst$lb_recurse$lbmem_5_0$state$enMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_5_0$state0.in","lb32_inst$lb_recurse$lbmem_5_0$state$reg0.out.0"],
          ["lb32_inst$lb_recurse$lbmem_5_0$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_5_0$waddr$add.in0"],
          ["lb32_inst$lb_recurse$lbmem_5_0$waddr$c1.out","lb32_inst$lb_recurse$lbmem_5_0$waddr$add.in1"],
          ["lb32_inst$lb_recurse$lbmem_5_0$waddr$mux.in0","lb32_inst$lb_recurse$lbmem_5_0$waddr$add.out"],
          ["lb32_inst$lb_recurse$lbmem_5_0$waddr$mux.in1","lb32_inst$lb_recurse$lbmem_5_0$waddr$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_5_0$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_5_0$waddr$eq.in0"],
          ["lb32_inst$lb_recurse$lbmem_5_0$waddr$maxval.out","lb32_inst$lb_recurse$lbmem_5_0$waddr$eq.in1"],
          ["lb32_inst$lb_recurse$lbmem_5_0$waddr$mux.sel","lb32_inst$lb_recurse$lbmem_5_0$waddr$eq.out"],
          ["lb32_inst$lb_recurse$lbmem_5_0$waddr$r$enMux.in1","lb32_inst$lb_recurse$lbmem_5_0$waddr$mux.out"],
          ["lb32_inst$lb_recurse$lbmem_5_0$waddr$r$clrMux.in1","lb32_inst$lb_recurse$lbmem_5_0$waddr$r$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_5_0$waddr$r$enMux.out","lb32_inst$lb_recurse$lbmem_5_0$waddr$r$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_5_0$waddr$r$reg0.in","lb32_inst$lb_recurse$lbmem_5_0$waddr$r$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_5_0_flush.out","lb32_inst$lb_recurse$lbmem_5_0$waddr$r$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_5_0$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_5_0$waddr$r$enMux.in0"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_5_0$waddr$r$enMux.sel"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_5_0$wen_ext.in.0"],
          ["lb32_inst$lb_recurse$lbmem_5_1$wen_ext.out","lb32_inst$lb_recurse$lbmem_5_1$add_wen.in0"],
          ["lb32_inst$lb_recurse$lbmem_5_1$cnt$reg0.out","lb32_inst$lb_recurse$lbmem_5_1$add_wen.in1"],
          ["lb32_inst$lb_recurse$lbmem_5_1$cnt$enMux.in1","lb32_inst$lb_recurse$lbmem_5_1$add_wen.out"],
          ["lb32_inst$lb_recurse$lbmem_5_1$eq_depth.in1","lb32_inst$lb_recurse$lbmem_5_1$add_wen.out"],
          ["lb32_inst$lb_recurse$lbmem_5_1$state$enMux.in1.0","lb32_inst$lb_recurse$lbmem_5_1$c1.out"],
          ["lb32_inst$lb_recurse$lbmem_5_1$cnt$clrMux.in1","lb32_inst$lb_recurse$lbmem_5_1$cnt$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_5_1$cnt$enMux.out","lb32_inst$lb_recurse$lbmem_5_1$cnt$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_5_1$cnt$reg0.in","lb32_inst$lb_recurse$lbmem_5_1$cnt$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_5_1_flush.out","lb32_inst$lb_recurse$lbmem_5_1$cnt$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_5_1$cnt$reg0.out","lb32_inst$lb_recurse$lbmem_5_1$cnt$enMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_5_1$state0.out","lb32_inst$lb_recurse$lbmem_5_1$cnt$enMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_5_1$eq_depth.in0","lb32_inst$lb_recurse$lbmem_5_1$depth_m1.out"],
          ["lb32_inst$lb_recurse$lbmem_5_1$state$enMux.sel","lb32_inst$lb_recurse$lbmem_5_1$eq_depth.out"],
          ["lb32_inst$lb_recurse$lbmem_5_1$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_5_1$mem.raddr"],
          ["self.out.1.5","lb32_inst$lb_recurse$lbmem_5_1$mem.rdata"],
          ["lb32_inst$lb_recurse$lbmem_5_1$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_5_1$mem.waddr"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_5_1$mem.wen"],
          ["lb32_inst$lb_recurse$lbmem_5_1$state$reg0.out.0","lb32_inst$lb_recurse$lbmem_5_1$out_and_wen.in0"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_5_1$out_and_wen.in1"],
          ["lb32_inst$lb_recurse$lbmem_5_1$raddr$r$enMux.sel","lb32_inst$lb_recurse$lbmem_5_1$out_and_wen.out"],
          ["lb32_inst$lb_recurse$lbmem_5_1$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_5_1$raddr$add.in0"],
          ["lb32_inst$lb_recurse$lbmem_5_1$raddr$c1.out","lb32_inst$lb_recurse$lbmem_5_1$raddr$add.in1"],
          ["lb32_inst$lb_recurse$lbmem_5_1$raddr$mux.in0","lb32_inst$lb_recurse$lbmem_5_1$raddr$add.out"],
          ["lb32_inst$lb_recurse$lbmem_5_1$raddr$mux.in1","lb32_inst$lb_recurse$lbmem_5_1$raddr$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_5_1$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_5_1$raddr$eq.in0"],
          ["lb32_inst$lb_recurse$lbmem_5_1$raddr$maxval.out","lb32_inst$lb_recurse$lbmem_5_1$raddr$eq.in1"],
          ["lb32_inst$lb_recurse$lbmem_5_1$raddr$mux.sel","lb32_inst$lb_recurse$lbmem_5_1$raddr$eq.out"],
          ["lb32_inst$lb_recurse$lbmem_5_1$raddr$r$enMux.in1","lb32_inst$lb_recurse$lbmem_5_1$raddr$mux.out"],
          ["lb32_inst$lb_recurse$lbmem_5_1$raddr$r$clrMux.in1","lb32_inst$lb_recurse$lbmem_5_1$raddr$r$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_5_1$raddr$r$enMux.out","lb32_inst$lb_recurse$lbmem_5_1$raddr$r$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_5_1$raddr$r$reg0.in","lb32_inst$lb_recurse$lbmem_5_1$raddr$r$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_5_1_flush.out","lb32_inst$lb_recurse$lbmem_5_1$raddr$r$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_5_1$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_5_1$raddr$r$enMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_5_1$state$clrMux.in1","lb32_inst$lb_recurse$lbmem_5_1$state$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_5_1$state$enMux.out","lb32_inst$lb_recurse$lbmem_5_1$state$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_5_1$state$reg0.in","lb32_inst$lb_recurse$lbmem_5_1$state$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_5_1_flush.out","lb32_inst$lb_recurse$lbmem_5_1$state$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_5_1$state$reg0.out","lb32_inst$lb_recurse$lbmem_5_1$state$enMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_5_1$state0.in","lb32_inst$lb_recurse$lbmem_5_1$state$reg0.out.0"],
          ["lb32_inst$lb_recurse$lbmem_5_1$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_5_1$waddr$add.in0"],
          ["lb32_inst$lb_recurse$lbmem_5_1$waddr$c1.out","lb32_inst$lb_recurse$lbmem_5_1$waddr$add.in1"],
          ["lb32_inst$lb_recurse$lbmem_5_1$waddr$mux.in0","lb32_inst$lb_recurse$lbmem_5_1$waddr$add.out"],
          ["lb32_inst$lb_recurse$lbmem_5_1$waddr$mux.in1","lb32_inst$lb_recurse$lbmem_5_1$waddr$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_5_1$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_5_1$waddr$eq.in0"],
          ["lb32_inst$lb_recurse$lbmem_5_1$waddr$maxval.out","lb32_inst$lb_recurse$lbmem_5_1$waddr$eq.in1"],
          ["lb32_inst$lb_recurse$lbmem_5_1$waddr$mux.sel","lb32_inst$lb_recurse$lbmem_5_1$waddr$eq.out"],
          ["lb32_inst$lb_recurse$lbmem_5_1$waddr$r$enMux.in1","lb32_inst$lb_recurse$lbmem_5_1$waddr$mux.out"],
          ["lb32_inst$lb_recurse$lbmem_5_1$waddr$r$clrMux.in1","lb32_inst$lb_recurse$lbmem_5_1$waddr$r$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_5_1$waddr$r$enMux.out","lb32_inst$lb_recurse$lbmem_5_1$waddr$r$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_5_1$waddr$r$reg0.in","lb32_inst$lb_recurse$lbmem_5_1$waddr$r$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_5_1_flush.out","lb32_inst$lb_recurse$lbmem_5_1$waddr$r$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_5_1$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_5_1$waddr$r$enMux.in0"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_5_1$waddr$r$enMux.sel"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_5_1$wen_ext.in.0"],
          ["self.out.4.4","self.in.0.0"],
          ["self.out.4.5","self.in.0.1"],
          ["self.out.5.4","self.in.1.0"],
          ["self.out.5.5","self.in.1.1"]
        ]
      }
    }
  }
}
}
