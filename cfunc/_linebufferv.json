{"top":"global.lb32",
"namespaces":{
  "global":{
    "modules":{
      "lb32":{
        "type":["Record",[
          ["in",["Array",1,["Array",1,["Array",3,["Array",16,"BitIn"]]]]],
          ["reset","BitIn"],
          ["wen","BitIn"],
          ["out",["Array",2,["Array",2,["Array",3,["Array",16,"Bit"]]]]],
          ["valid","Bit"]
        ]],
        "instances":{
          "lb32_inst$lb_recurse$const_stencil0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0000"]}
          },
          "lb32_inst$lb_recurse$const_stencil1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0001"]}
          },
          "lb32_inst$lb_recurse$const_stencil2":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0001"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lb1d_0$reset_term":{
            "modref":"corebit.term"
          },
          "lb32_inst$lb_recurse$lb2d_0$lb1d_1$reset_term":{
            "modref":"corebit.term"
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$add_wen":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",2]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$c1":{
            "modref":"corebit.const",
            "modargs":{"value":["Bool",true]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$cnt$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",2]},
            "modargs":{"value":[["BitVector",2],"2'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$cnt$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",2]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$cnt$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",2]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$cnt$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",2]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",2],"2'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$depth_m1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",2]},
            "modargs":{"value":[["BitVector",2],"2'h1"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$eq_depth":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",2]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$mem":{
            "genref":"coreir.mem",
            "genargs":{"depth":["Int",1], "has_init":["Bool",false], "width":["Int",16]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$out_and_wen":{
            "modref":"corebit.and"
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$raddr$add":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$raddr$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$raddr$c1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h1"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$raddr$eq":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$raddr$maxval":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$raddr$mux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$raddr$r$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$raddr$r$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$raddr$r$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$raddr$r$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",1]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$state$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$state$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$state$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$state$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",1]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$state0":{
            "modref":"corebit.not"
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$waddr$add":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$waddr$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$waddr$c1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h1"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$waddr$eq":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$waddr$maxval":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$waddr$mux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$waddr$r$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$waddr$r$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$waddr$r$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$waddr$r$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",1]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$wen_ext":{
            "genref":"coreir.zext",
            "genargs":{"width_in":["Int",1], "width_out":["Int",2]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_0_flush":{
            "modref":"corebit.const",
            "modargs":{"value":["Bool",false]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$add_wen":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",2]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$c1":{
            "modref":"corebit.const",
            "modargs":{"value":["Bool",true]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$cnt$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",2]},
            "modargs":{"value":[["BitVector",2],"2'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$cnt$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",2]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$cnt$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",2]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$cnt$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",2]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",2],"2'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$depth_m1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",2]},
            "modargs":{"value":[["BitVector",2],"2'h1"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$eq_depth":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",2]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$mem":{
            "genref":"coreir.mem",
            "genargs":{"depth":["Int",1], "has_init":["Bool",false], "width":["Int",16]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$out_and_wen":{
            "modref":"corebit.and"
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$raddr$add":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$raddr$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$raddr$c1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h1"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$raddr$eq":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$raddr$maxval":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$raddr$mux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$raddr$r$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$raddr$r$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$raddr$r$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$raddr$r$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",1]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$state$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$state$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$state$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$state$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",1]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$state0":{
            "modref":"corebit.not"
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$waddr$add":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$waddr$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$waddr$c1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h1"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$waddr$eq":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$waddr$maxval":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$waddr$mux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$waddr$r$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$waddr$r$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$waddr$r$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$waddr$r$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",1]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$wen_ext":{
            "genref":"coreir.zext",
            "genargs":{"width_in":["Int",1], "width_out":["Int",2]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_1_flush":{
            "modref":"corebit.const",
            "modargs":{"value":["Bool",false]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$add_wen":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",2]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$c1":{
            "modref":"corebit.const",
            "modargs":{"value":["Bool",true]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$cnt$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",2]},
            "modargs":{"value":[["BitVector",2],"2'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$cnt$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",2]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$cnt$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",2]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$cnt$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",2]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",2],"2'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$depth_m1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",2]},
            "modargs":{"value":[["BitVector",2],"2'h1"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$eq_depth":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",2]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$mem":{
            "genref":"coreir.mem",
            "genargs":{"depth":["Int",1], "has_init":["Bool",false], "width":["Int",16]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$out_and_wen":{
            "modref":"corebit.and"
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$raddr$add":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$raddr$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$raddr$c1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h1"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$raddr$eq":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$raddr$maxval":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$raddr$mux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$raddr$r$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$raddr$r$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$raddr$r$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$raddr$r$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",1]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$state$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$state$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$state$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$state$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",1]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$state0":{
            "modref":"corebit.not"
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$waddr$add":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$waddr$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$waddr$c1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h1"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$waddr$eq":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$waddr$maxval":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$waddr$mux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$waddr$r$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$waddr$r$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$waddr$r$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$waddr$r$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",1]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$wen_ext":{
            "genref":"coreir.zext",
            "genargs":{"width_in":["Int",1], "width_out":["Int",2]}
          },
          "lb32_inst$lb_recurse$lb2d_0$lbmem_1_2_flush":{
            "modref":"corebit.const",
            "modargs":{"value":["Bool",false]}
          },
          "lb32_inst$lb_recurse$lb2d_0$reset_term":{
            "modref":"corebit.term"
          },
          "lb32_inst$lb_recurse$lb2d_1$lb1d_0$reset_term":{
            "modref":"corebit.term"
          },
          "lb32_inst$lb_recurse$lb2d_1$lb1d_1$reset_term":{
            "modref":"corebit.term"
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$add_wen":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",2]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$c1":{
            "modref":"corebit.const",
            "modargs":{"value":["Bool",true]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$cnt$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",2]},
            "modargs":{"value":[["BitVector",2],"2'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$cnt$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",2]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$cnt$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",2]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$cnt$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",2]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",2],"2'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$depth_m1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",2]},
            "modargs":{"value":[["BitVector",2],"2'h1"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$eq_depth":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",2]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$mem":{
            "genref":"coreir.mem",
            "genargs":{"depth":["Int",1], "has_init":["Bool",false], "width":["Int",16]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$out_and_wen":{
            "modref":"corebit.and"
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$raddr$add":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$raddr$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$raddr$c1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h1"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$raddr$eq":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$raddr$maxval":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$raddr$mux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$raddr$r$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$raddr$r$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$raddr$r$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$raddr$r$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",1]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$state$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$state$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$state$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$state$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",1]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$state0":{
            "modref":"corebit.not"
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$waddr$add":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$waddr$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$waddr$c1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h1"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$waddr$eq":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$waddr$maxval":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$waddr$mux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$waddr$r$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$waddr$r$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$waddr$r$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$waddr$r$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",1]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$wen_ext":{
            "genref":"coreir.zext",
            "genargs":{"width_in":["Int",1], "width_out":["Int",2]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_0_flush":{
            "modref":"corebit.const",
            "modargs":{"value":["Bool",false]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$add_wen":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",2]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$c1":{
            "modref":"corebit.const",
            "modargs":{"value":["Bool",true]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$cnt$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",2]},
            "modargs":{"value":[["BitVector",2],"2'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$cnt$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",2]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$cnt$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",2]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$cnt$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",2]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",2],"2'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$depth_m1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",2]},
            "modargs":{"value":[["BitVector",2],"2'h1"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$eq_depth":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",2]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$mem":{
            "genref":"coreir.mem",
            "genargs":{"depth":["Int",1], "has_init":["Bool",false], "width":["Int",16]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$out_and_wen":{
            "modref":"corebit.and"
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$raddr$add":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$raddr$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$raddr$c1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h1"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$raddr$eq":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$raddr$maxval":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$raddr$mux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$raddr$r$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$raddr$r$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$raddr$r$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$raddr$r$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",1]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$state$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$state$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$state$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$state$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",1]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$state0":{
            "modref":"corebit.not"
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$waddr$add":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$waddr$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$waddr$c1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h1"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$waddr$eq":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$waddr$maxval":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$waddr$mux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$waddr$r$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$waddr$r$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$waddr$r$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$waddr$r$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",1]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$wen_ext":{
            "genref":"coreir.zext",
            "genargs":{"width_in":["Int",1], "width_out":["Int",2]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_1_flush":{
            "modref":"corebit.const",
            "modargs":{"value":["Bool",false]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$add_wen":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",2]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$c1":{
            "modref":"corebit.const",
            "modargs":{"value":["Bool",true]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$cnt$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",2]},
            "modargs":{"value":[["BitVector",2],"2'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$cnt$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",2]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$cnt$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",2]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$cnt$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",2]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",2],"2'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$depth_m1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",2]},
            "modargs":{"value":[["BitVector",2],"2'h1"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$eq_depth":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",2]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$mem":{
            "genref":"coreir.mem",
            "genargs":{"depth":["Int",1], "has_init":["Bool",false], "width":["Int",16]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$out_and_wen":{
            "modref":"corebit.and"
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$raddr$add":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$raddr$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$raddr$c1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h1"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$raddr$eq":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$raddr$maxval":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$raddr$mux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$raddr$r$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$raddr$r$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$raddr$r$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$raddr$r$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",1]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$state$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$state$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$state$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$state$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",1]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$state0":{
            "modref":"corebit.not"
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$waddr$add":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$waddr$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$waddr$c1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h1"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$waddr$eq":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$waddr$maxval":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$waddr$mux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$waddr$r$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$waddr$r$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$waddr$r$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$waddr$r$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",1]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$wen_ext":{
            "genref":"coreir.zext",
            "genargs":{"width_in":["Int",1], "width_out":["Int",2]}
          },
          "lb32_inst$lb_recurse$lb2d_1$lbmem_1_2_flush":{
            "modref":"corebit.const",
            "modargs":{"value":["Bool",false]}
          },
          "lb32_inst$lb_recurse$lb2d_1$reset_term":{
            "modref":"corebit.term"
          },
          "lb32_inst$lb_recurse$lbmem_1_0_0$add_wen":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",7]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_0$c1":{
            "modref":"corebit.const",
            "modargs":{"value":["Bool",true]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_0$cnt$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",7]},
            "modargs":{"value":[["BitVector",7],"7'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_0$cnt$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",7]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_0$cnt$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",7]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_0$cnt$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",7]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",7],"7'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_0$depth_m1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",7]},
            "modargs":{"value":[["BitVector",7],"7'h30"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_0$eq_depth":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",7]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_0$mem":{
            "genref":"coreir.mem",
            "genargs":{"depth":["Int",48], "has_init":["Bool",false], "width":["Int",16]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_0$out_and_wen":{
            "modref":"corebit.and"
          },
          "lb32_inst$lb_recurse$lbmem_1_0_0$raddr$add":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_0$raddr$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",6]},
            "modargs":{"value":[["BitVector",6],"6'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_0$raddr$c1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",6]},
            "modargs":{"value":[["BitVector",6],"6'h01"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_0$raddr$eq":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_0$raddr$maxval":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",6]},
            "modargs":{"value":[["BitVector",6],"6'h2f"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_0$raddr$mux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_0$raddr$r$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",6]},
            "modargs":{"value":[["BitVector",6],"6'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_0$raddr$r$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_0$raddr$r$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_0$raddr$r$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",6]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",6],"6'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_0$state$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_0$state$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_0$state$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_0$state$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",1]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_0$state0":{
            "modref":"corebit.not"
          },
          "lb32_inst$lb_recurse$lbmem_1_0_0$waddr$add":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_0$waddr$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",6]},
            "modargs":{"value":[["BitVector",6],"6'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_0$waddr$c1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",6]},
            "modargs":{"value":[["BitVector",6],"6'h01"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_0$waddr$eq":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_0$waddr$maxval":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",6]},
            "modargs":{"value":[["BitVector",6],"6'h2f"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_0$waddr$mux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_0$waddr$r$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",6]},
            "modargs":{"value":[["BitVector",6],"6'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_0$waddr$r$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_0$waddr$r$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_0$waddr$r$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",6]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",6],"6'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_0$wen_ext":{
            "genref":"coreir.zext",
            "genargs":{"width_in":["Int",1], "width_out":["Int",7]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_0_flush":{
            "modref":"corebit.const",
            "modargs":{"value":["Bool",false]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_1$add_wen":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",7]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_1$c1":{
            "modref":"corebit.const",
            "modargs":{"value":["Bool",true]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_1$cnt$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",7]},
            "modargs":{"value":[["BitVector",7],"7'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_1$cnt$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",7]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_1$cnt$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",7]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_1$cnt$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",7]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",7],"7'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_1$depth_m1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",7]},
            "modargs":{"value":[["BitVector",7],"7'h30"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_1$eq_depth":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",7]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_1$mem":{
            "genref":"coreir.mem",
            "genargs":{"depth":["Int",48], "has_init":["Bool",false], "width":["Int",16]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_1$out_and_wen":{
            "modref":"corebit.and"
          },
          "lb32_inst$lb_recurse$lbmem_1_0_1$raddr$add":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_1$raddr$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",6]},
            "modargs":{"value":[["BitVector",6],"6'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_1$raddr$c1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",6]},
            "modargs":{"value":[["BitVector",6],"6'h01"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_1$raddr$eq":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_1$raddr$maxval":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",6]},
            "modargs":{"value":[["BitVector",6],"6'h2f"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_1$raddr$mux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_1$raddr$r$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",6]},
            "modargs":{"value":[["BitVector",6],"6'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_1$raddr$r$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_1$raddr$r$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_1$raddr$r$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",6]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",6],"6'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_1$state$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_1$state$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_1$state$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_1$state$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",1]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_1$state0":{
            "modref":"corebit.not"
          },
          "lb32_inst$lb_recurse$lbmem_1_0_1$waddr$add":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_1$waddr$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",6]},
            "modargs":{"value":[["BitVector",6],"6'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_1$waddr$c1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",6]},
            "modargs":{"value":[["BitVector",6],"6'h01"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_1$waddr$eq":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_1$waddr$maxval":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",6]},
            "modargs":{"value":[["BitVector",6],"6'h2f"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_1$waddr$mux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_1$waddr$r$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",6]},
            "modargs":{"value":[["BitVector",6],"6'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_1$waddr$r$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_1$waddr$r$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_1$waddr$r$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",6]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",6],"6'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_1$wen_ext":{
            "genref":"coreir.zext",
            "genargs":{"width_in":["Int",1], "width_out":["Int",7]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_1_flush":{
            "modref":"corebit.const",
            "modargs":{"value":["Bool",false]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_2$add_wen":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",7]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_2$c1":{
            "modref":"corebit.const",
            "modargs":{"value":["Bool",true]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_2$cnt$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",7]},
            "modargs":{"value":[["BitVector",7],"7'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_2$cnt$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",7]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_2$cnt$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",7]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_2$cnt$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",7]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",7],"7'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_2$depth_m1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",7]},
            "modargs":{"value":[["BitVector",7],"7'h30"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_2$eq_depth":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",7]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_2$mem":{
            "genref":"coreir.mem",
            "genargs":{"depth":["Int",48], "has_init":["Bool",false], "width":["Int",16]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_2$out_and_wen":{
            "modref":"corebit.and"
          },
          "lb32_inst$lb_recurse$lbmem_1_0_2$raddr$add":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_2$raddr$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",6]},
            "modargs":{"value":[["BitVector",6],"6'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_2$raddr$c1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",6]},
            "modargs":{"value":[["BitVector",6],"6'h01"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_2$raddr$eq":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_2$raddr$maxval":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",6]},
            "modargs":{"value":[["BitVector",6],"6'h2f"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_2$raddr$mux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_2$raddr$r$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",6]},
            "modargs":{"value":[["BitVector",6],"6'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_2$raddr$r$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_2$raddr$r$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_2$raddr$r$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",6]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",6],"6'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_2$state$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",1]},
            "modargs":{"value":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_2$state$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_2$state$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",1]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_2$state$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",1]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",1],"1'h0"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_2$state0":{
            "modref":"corebit.not"
          },
          "lb32_inst$lb_recurse$lbmem_1_0_2$waddr$add":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_2$waddr$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",6]},
            "modargs":{"value":[["BitVector",6],"6'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_2$waddr$c1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",6]},
            "modargs":{"value":[["BitVector",6],"6'h01"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_2$waddr$eq":{
            "genref":"coreir.eq",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_2$waddr$maxval":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",6]},
            "modargs":{"value":[["BitVector",6],"6'h2f"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_2$waddr$mux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_2$waddr$r$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",6]},
            "modargs":{"value":[["BitVector",6],"6'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_2$waddr$r$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_2$waddr$r$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",6]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_2$waddr$r$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",6]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",6],"6'h00"]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_2$wen_ext":{
            "genref":"coreir.zext",
            "genargs":{"width_in":["Int",1], "width_out":["Int",7]}
          },
          "lb32_inst$lb_recurse$lbmem_1_0_2_flush":{
            "modref":"corebit.const",
            "modargs":{"value":["Bool",false]}
          },
          "lb32_inst$lb_recurse$valcompare_0":{
            "genref":"coreir.ule",
            "genargs":{"width":["Int",16]}
          },
          "lb32_inst$lb_recurse$valcompare_1":{
            "genref":"coreir.ule",
            "genargs":{"width":["Int",16]}
          },
          "lb32_inst$lb_recurse$valcompare_2":{
            "genref":"coreir.ule",
            "genargs":{"width":["Int",16]}
          },
          "lb32_inst$lb_recurse$valcounter_0$count_const":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0000"]}
          },
          "lb32_inst$lb_recurse$valcounter_0$one_const":{
            "modref":"corebit.const",
            "modargs":{"value":["Bool",true]}
          },
          "lb32_inst$lb_recurse$valcounter_1$add":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",16]}
          },
          "lb32_inst$lb_recurse$valcounter_1$and":{
            "modref":"corebit.and"
          },
          "lb32_inst$lb_recurse$valcounter_1$count$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0000"]}
          },
          "lb32_inst$lb_recurse$valcounter_1$count$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",16]}
          },
          "lb32_inst$lb_recurse$valcounter_1$count$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",16]}
          },
          "lb32_inst$lb_recurse$valcounter_1$count$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",16]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",16],"16'h0000"]}
          },
          "lb32_inst$lb_recurse$valcounter_1$inc":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0001"]}
          },
          "lb32_inst$lb_recurse$valcounter_1$max":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h002f"]}
          },
          "lb32_inst$lb_recurse$valcounter_1$resetOr":{
            "modref":"corebit.or"
          },
          "lb32_inst$lb_recurse$valcounter_1$ult":{
            "genref":"coreir.ult",
            "genargs":{"width":["Int",16]}
          },
          "lb32_inst$lb_recurse$valcounter_2$add":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",16]}
          },
          "lb32_inst$lb_recurse$valcounter_2$and":{
            "modref":"corebit.and"
          },
          "lb32_inst$lb_recurse$valcounter_2$count$c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0000"]}
          },
          "lb32_inst$lb_recurse$valcounter_2$count$clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",16]}
          },
          "lb32_inst$lb_recurse$valcounter_2$count$enMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",16]}
          },
          "lb32_inst$lb_recurse$valcounter_2$count$reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",16]},
            "modargs":{"clk_posedge":["Bool",true], "init":[["BitVector",16],"16'h0000"]}
          },
          "lb32_inst$lb_recurse$valcounter_2$inc":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h0001"]}
          },
          "lb32_inst$lb_recurse$valcounter_2$max":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],"16'h002f"]}
          },
          "lb32_inst$lb_recurse$valcounter_2$resetOr":{
            "modref":"corebit.or"
          },
          "lb32_inst$lb_recurse$valcounter_2$ult":{
            "genref":"coreir.ult",
            "genargs":{"width":["Int",16]}
          },
          "lb32_inst$lb_recurse$valid_andr$_join":{
            "modref":"corebit.and"
          },
          "lb32_inst$lb_recurse$valid_andr$opN_0$_join":{
            "modref":"corebit.and"
          },
          "lb32_inst$lb_recurse$valid_andr$opN_1$_join":{
            "modref":"corebit.and"
          }
        },
        "connections":[
          ["lb32_inst$lb_recurse$valcompare_0.in0","lb32_inst$lb_recurse$const_stencil0.out"],
          ["lb32_inst$lb_recurse$valcompare_1.in0","lb32_inst$lb_recurse$const_stencil1.out"],
          ["lb32_inst$lb_recurse$valcompare_2.in0","lb32_inst$lb_recurse$const_stencil2.out"],
          ["self.reset","lb32_inst$lb_recurse$lb2d_0$lb1d_0$reset_term.in"],
          ["self.reset","lb32_inst$lb_recurse$lb2d_0$lb1d_1$reset_term.in"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$wen_ext.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$add_wen.in0"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$cnt$reg0.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$add_wen.in1"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$cnt$enMux.in1","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$add_wen.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$eq_depth.in1","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$add_wen.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$state$enMux.in1.0","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$c1.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$cnt$clrMux.in1","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$cnt$c0.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$cnt$enMux.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$cnt$clrMux.in0"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$cnt$reg0.in","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$cnt$clrMux.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0_flush.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$cnt$clrMux.sel"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$cnt$reg0.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$cnt$enMux.in0"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$state0.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$cnt$enMux.sel"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$eq_depth.in0","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$depth_m1.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$state$enMux.sel","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$eq_depth.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$raddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$mem.raddr"],
          ["self.out.1.0.0","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$mem.rdata"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$waddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$mem.waddr"],
          ["self.in.0.0.0","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$mem.wdata"],
          ["self.wen","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$mem.wen"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$state$reg0.out.0","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$out_and_wen.in0"],
          ["self.wen","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$out_and_wen.in1"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$raddr$r$enMux.sel","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$out_and_wen.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$raddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$raddr$add.in0"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$raddr$c1.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$raddr$add.in1"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$raddr$mux.in0","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$raddr$add.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$raddr$mux.in1","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$raddr$c0.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$raddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$raddr$eq.in0"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$raddr$maxval.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$raddr$eq.in1"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$raddr$mux.sel","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$raddr$eq.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$raddr$r$enMux.in1","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$raddr$mux.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$raddr$r$clrMux.in1","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$raddr$r$c0.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$raddr$r$enMux.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$raddr$r$clrMux.in0"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$raddr$r$reg0.in","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$raddr$r$clrMux.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0_flush.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$raddr$r$clrMux.sel"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$raddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$raddr$r$enMux.in0"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$state$clrMux.in1","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$state$c0.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$state$enMux.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$state$clrMux.in0"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$state$reg0.in","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$state$clrMux.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0_flush.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$state$clrMux.sel"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$state$reg0.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$state$enMux.in0"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$state0.in","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$state$reg0.out.0"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$waddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$waddr$add.in0"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$waddr$c1.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$waddr$add.in1"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$waddr$mux.in0","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$waddr$add.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$waddr$mux.in1","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$waddr$c0.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$waddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$waddr$eq.in0"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$waddr$maxval.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$waddr$eq.in1"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$waddr$mux.sel","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$waddr$eq.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$waddr$r$enMux.in1","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$waddr$mux.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$waddr$r$clrMux.in1","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$waddr$r$c0.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$waddr$r$enMux.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$waddr$r$clrMux.in0"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$waddr$r$reg0.in","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$waddr$r$clrMux.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0_flush.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$waddr$r$clrMux.sel"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$waddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$waddr$r$enMux.in0"],
          ["self.wen","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$waddr$r$enMux.sel"],
          ["self.wen","lb32_inst$lb_recurse$lb2d_0$lbmem_1_0$wen_ext.in.0"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$wen_ext.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$add_wen.in0"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$cnt$reg0.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$add_wen.in1"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$cnt$enMux.in1","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$add_wen.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$eq_depth.in1","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$add_wen.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$state$enMux.in1.0","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$c1.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$cnt$clrMux.in1","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$cnt$c0.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$cnt$enMux.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$cnt$clrMux.in0"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$cnt$reg0.in","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$cnt$clrMux.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1_flush.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$cnt$clrMux.sel"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$cnt$reg0.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$cnt$enMux.in0"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$state0.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$cnt$enMux.sel"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$eq_depth.in0","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$depth_m1.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$state$enMux.sel","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$eq_depth.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$raddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$mem.raddr"],
          ["self.out.1.0.1","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$mem.rdata"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$waddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$mem.waddr"],
          ["self.in.0.0.1","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$mem.wdata"],
          ["self.wen","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$mem.wen"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$state$reg0.out.0","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$out_and_wen.in0"],
          ["self.wen","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$out_and_wen.in1"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$raddr$r$enMux.sel","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$out_and_wen.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$raddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$raddr$add.in0"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$raddr$c1.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$raddr$add.in1"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$raddr$mux.in0","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$raddr$add.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$raddr$mux.in1","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$raddr$c0.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$raddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$raddr$eq.in0"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$raddr$maxval.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$raddr$eq.in1"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$raddr$mux.sel","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$raddr$eq.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$raddr$r$enMux.in1","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$raddr$mux.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$raddr$r$clrMux.in1","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$raddr$r$c0.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$raddr$r$enMux.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$raddr$r$clrMux.in0"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$raddr$r$reg0.in","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$raddr$r$clrMux.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1_flush.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$raddr$r$clrMux.sel"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$raddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$raddr$r$enMux.in0"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$state$clrMux.in1","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$state$c0.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$state$enMux.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$state$clrMux.in0"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$state$reg0.in","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$state$clrMux.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1_flush.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$state$clrMux.sel"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$state$reg0.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$state$enMux.in0"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$state0.in","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$state$reg0.out.0"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$waddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$waddr$add.in0"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$waddr$c1.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$waddr$add.in1"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$waddr$mux.in0","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$waddr$add.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$waddr$mux.in1","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$waddr$c0.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$waddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$waddr$eq.in0"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$waddr$maxval.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$waddr$eq.in1"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$waddr$mux.sel","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$waddr$eq.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$waddr$r$enMux.in1","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$waddr$mux.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$waddr$r$clrMux.in1","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$waddr$r$c0.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$waddr$r$enMux.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$waddr$r$clrMux.in0"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$waddr$r$reg0.in","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$waddr$r$clrMux.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1_flush.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$waddr$r$clrMux.sel"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$waddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$waddr$r$enMux.in0"],
          ["self.wen","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$waddr$r$enMux.sel"],
          ["self.wen","lb32_inst$lb_recurse$lb2d_0$lbmem_1_1$wen_ext.in.0"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$wen_ext.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$add_wen.in0"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$cnt$reg0.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$add_wen.in1"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$cnt$enMux.in1","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$add_wen.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$eq_depth.in1","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$add_wen.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$state$enMux.in1.0","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$c1.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$cnt$clrMux.in1","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$cnt$c0.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$cnt$enMux.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$cnt$clrMux.in0"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$cnt$reg0.in","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$cnt$clrMux.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2_flush.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$cnt$clrMux.sel"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$cnt$reg0.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$cnt$enMux.in0"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$state0.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$cnt$enMux.sel"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$eq_depth.in0","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$depth_m1.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$state$enMux.sel","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$eq_depth.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$raddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$mem.raddr"],
          ["self.out.1.0.2","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$mem.rdata"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$waddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$mem.waddr"],
          ["self.in.0.0.2","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$mem.wdata"],
          ["self.wen","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$mem.wen"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$state$reg0.out.0","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$out_and_wen.in0"],
          ["self.wen","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$out_and_wen.in1"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$raddr$r$enMux.sel","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$out_and_wen.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$raddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$raddr$add.in0"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$raddr$c1.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$raddr$add.in1"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$raddr$mux.in0","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$raddr$add.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$raddr$mux.in1","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$raddr$c0.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$raddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$raddr$eq.in0"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$raddr$maxval.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$raddr$eq.in1"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$raddr$mux.sel","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$raddr$eq.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$raddr$r$enMux.in1","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$raddr$mux.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$raddr$r$clrMux.in1","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$raddr$r$c0.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$raddr$r$enMux.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$raddr$r$clrMux.in0"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$raddr$r$reg0.in","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$raddr$r$clrMux.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2_flush.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$raddr$r$clrMux.sel"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$raddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$raddr$r$enMux.in0"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$state$clrMux.in1","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$state$c0.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$state$enMux.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$state$clrMux.in0"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$state$reg0.in","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$state$clrMux.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2_flush.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$state$clrMux.sel"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$state$reg0.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$state$enMux.in0"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$state0.in","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$state$reg0.out.0"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$waddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$waddr$add.in0"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$waddr$c1.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$waddr$add.in1"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$waddr$mux.in0","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$waddr$add.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$waddr$mux.in1","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$waddr$c0.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$waddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$waddr$eq.in0"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$waddr$maxval.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$waddr$eq.in1"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$waddr$mux.sel","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$waddr$eq.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$waddr$r$enMux.in1","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$waddr$mux.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$waddr$r$clrMux.in1","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$waddr$r$c0.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$waddr$r$enMux.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$waddr$r$clrMux.in0"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$waddr$r$reg0.in","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$waddr$r$clrMux.out"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2_flush.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$waddr$r$clrMux.sel"],
          ["lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$waddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$waddr$r$enMux.in0"],
          ["self.wen","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$waddr$r$enMux.sel"],
          ["self.wen","lb32_inst$lb_recurse$lb2d_0$lbmem_1_2$wen_ext.in.0"],
          ["self.reset","lb32_inst$lb_recurse$lb2d_0$reset_term.in"],
          ["self.reset","lb32_inst$lb_recurse$lb2d_1$lb1d_0$reset_term.in"],
          ["self.reset","lb32_inst$lb_recurse$lb2d_1$lb1d_1$reset_term.in"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$wen_ext.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$add_wen.in0"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$cnt$reg0.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$add_wen.in1"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$cnt$enMux.in1","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$add_wen.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$eq_depth.in1","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$add_wen.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$state$enMux.in1.0","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$c1.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$cnt$clrMux.in1","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$cnt$c0.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$cnt$enMux.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$cnt$clrMux.in0"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$cnt$reg0.in","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$cnt$clrMux.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0_flush.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$cnt$clrMux.sel"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$cnt$reg0.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$cnt$enMux.in0"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$state0.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$cnt$enMux.sel"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$eq_depth.in0","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$depth_m1.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$state$enMux.sel","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$eq_depth.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$raddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$mem.raddr"],
          ["self.out.0.0.0","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$mem.rdata"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$waddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$mem.waddr"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$mem.rdata","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$mem.wdata"],
          ["self.wen","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$mem.wen"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$state$reg0.out.0","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$out_and_wen.in0"],
          ["self.wen","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$out_and_wen.in1"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$raddr$r$enMux.sel","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$out_and_wen.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$raddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$raddr$add.in0"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$raddr$c1.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$raddr$add.in1"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$raddr$mux.in0","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$raddr$add.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$raddr$mux.in1","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$raddr$c0.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$raddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$raddr$eq.in0"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$raddr$maxval.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$raddr$eq.in1"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$raddr$mux.sel","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$raddr$eq.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$raddr$r$enMux.in1","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$raddr$mux.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$raddr$r$clrMux.in1","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$raddr$r$c0.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$raddr$r$enMux.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$raddr$r$clrMux.in0"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$raddr$r$reg0.in","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$raddr$r$clrMux.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0_flush.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$raddr$r$clrMux.sel"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$raddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$raddr$r$enMux.in0"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$state$clrMux.in1","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$state$c0.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$state$enMux.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$state$clrMux.in0"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$state$reg0.in","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$state$clrMux.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0_flush.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$state$clrMux.sel"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$state$reg0.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$state$enMux.in0"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$state0.in","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$state$reg0.out.0"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$waddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$waddr$add.in0"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$waddr$c1.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$waddr$add.in1"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$waddr$mux.in0","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$waddr$add.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$waddr$mux.in1","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$waddr$c0.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$waddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$waddr$eq.in0"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$waddr$maxval.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$waddr$eq.in1"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$waddr$mux.sel","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$waddr$eq.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$waddr$r$enMux.in1","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$waddr$mux.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$waddr$r$clrMux.in1","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$waddr$r$c0.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$waddr$r$enMux.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$waddr$r$clrMux.in0"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$waddr$r$reg0.in","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$waddr$r$clrMux.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0_flush.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$waddr$r$clrMux.sel"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$waddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$waddr$r$enMux.in0"],
          ["self.wen","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$waddr$r$enMux.sel"],
          ["self.wen","lb32_inst$lb_recurse$lb2d_1$lbmem_1_0$wen_ext.in.0"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$wen_ext.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$add_wen.in0"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$cnt$reg0.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$add_wen.in1"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$cnt$enMux.in1","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$add_wen.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$eq_depth.in1","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$add_wen.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$state$enMux.in1.0","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$c1.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$cnt$clrMux.in1","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$cnt$c0.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$cnt$enMux.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$cnt$clrMux.in0"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$cnt$reg0.in","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$cnt$clrMux.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1_flush.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$cnt$clrMux.sel"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$cnt$reg0.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$cnt$enMux.in0"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$state0.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$cnt$enMux.sel"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$eq_depth.in0","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$depth_m1.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$state$enMux.sel","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$eq_depth.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$raddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$mem.raddr"],
          ["self.out.0.0.1","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$mem.rdata"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$waddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$mem.waddr"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$mem.rdata","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$mem.wdata"],
          ["self.wen","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$mem.wen"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$state$reg0.out.0","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$out_and_wen.in0"],
          ["self.wen","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$out_and_wen.in1"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$raddr$r$enMux.sel","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$out_and_wen.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$raddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$raddr$add.in0"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$raddr$c1.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$raddr$add.in1"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$raddr$mux.in0","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$raddr$add.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$raddr$mux.in1","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$raddr$c0.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$raddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$raddr$eq.in0"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$raddr$maxval.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$raddr$eq.in1"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$raddr$mux.sel","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$raddr$eq.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$raddr$r$enMux.in1","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$raddr$mux.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$raddr$r$clrMux.in1","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$raddr$r$c0.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$raddr$r$enMux.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$raddr$r$clrMux.in0"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$raddr$r$reg0.in","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$raddr$r$clrMux.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1_flush.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$raddr$r$clrMux.sel"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$raddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$raddr$r$enMux.in0"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$state$clrMux.in1","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$state$c0.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$state$enMux.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$state$clrMux.in0"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$state$reg0.in","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$state$clrMux.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1_flush.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$state$clrMux.sel"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$state$reg0.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$state$enMux.in0"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$state0.in","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$state$reg0.out.0"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$waddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$waddr$add.in0"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$waddr$c1.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$waddr$add.in1"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$waddr$mux.in0","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$waddr$add.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$waddr$mux.in1","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$waddr$c0.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$waddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$waddr$eq.in0"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$waddr$maxval.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$waddr$eq.in1"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$waddr$mux.sel","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$waddr$eq.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$waddr$r$enMux.in1","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$waddr$mux.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$waddr$r$clrMux.in1","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$waddr$r$c0.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$waddr$r$enMux.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$waddr$r$clrMux.in0"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$waddr$r$reg0.in","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$waddr$r$clrMux.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1_flush.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$waddr$r$clrMux.sel"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$waddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$waddr$r$enMux.in0"],
          ["self.wen","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$waddr$r$enMux.sel"],
          ["self.wen","lb32_inst$lb_recurse$lb2d_1$lbmem_1_1$wen_ext.in.0"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$wen_ext.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$add_wen.in0"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$cnt$reg0.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$add_wen.in1"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$cnt$enMux.in1","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$add_wen.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$eq_depth.in1","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$add_wen.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$state$enMux.in1.0","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$c1.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$cnt$clrMux.in1","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$cnt$c0.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$cnt$enMux.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$cnt$clrMux.in0"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$cnt$reg0.in","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$cnt$clrMux.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2_flush.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$cnt$clrMux.sel"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$cnt$reg0.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$cnt$enMux.in0"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$state0.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$cnt$enMux.sel"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$eq_depth.in0","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$depth_m1.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$state$enMux.sel","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$eq_depth.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$raddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$mem.raddr"],
          ["self.out.0.0.2","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$mem.rdata"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$waddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$mem.waddr"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$mem.rdata","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$mem.wdata"],
          ["self.wen","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$mem.wen"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$state$reg0.out.0","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$out_and_wen.in0"],
          ["self.wen","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$out_and_wen.in1"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$raddr$r$enMux.sel","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$out_and_wen.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$raddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$raddr$add.in0"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$raddr$c1.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$raddr$add.in1"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$raddr$mux.in0","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$raddr$add.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$raddr$mux.in1","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$raddr$c0.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$raddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$raddr$eq.in0"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$raddr$maxval.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$raddr$eq.in1"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$raddr$mux.sel","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$raddr$eq.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$raddr$r$enMux.in1","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$raddr$mux.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$raddr$r$clrMux.in1","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$raddr$r$c0.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$raddr$r$enMux.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$raddr$r$clrMux.in0"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$raddr$r$reg0.in","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$raddr$r$clrMux.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2_flush.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$raddr$r$clrMux.sel"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$raddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$raddr$r$enMux.in0"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$state$clrMux.in1","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$state$c0.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$state$enMux.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$state$clrMux.in0"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$state$reg0.in","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$state$clrMux.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2_flush.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$state$clrMux.sel"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$state$reg0.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$state$enMux.in0"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$state0.in","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$state$reg0.out.0"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$waddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$waddr$add.in0"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$waddr$c1.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$waddr$add.in1"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$waddr$mux.in0","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$waddr$add.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$waddr$mux.in1","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$waddr$c0.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$waddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$waddr$eq.in0"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$waddr$maxval.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$waddr$eq.in1"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$waddr$mux.sel","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$waddr$eq.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$waddr$r$enMux.in1","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$waddr$mux.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$waddr$r$clrMux.in1","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$waddr$r$c0.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$waddr$r$enMux.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$waddr$r$clrMux.in0"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$waddr$r$reg0.in","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$waddr$r$clrMux.out"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2_flush.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$waddr$r$clrMux.sel"],
          ["lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$waddr$r$reg0.out","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$waddr$r$enMux.in0"],
          ["self.wen","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$waddr$r$enMux.sel"],
          ["self.wen","lb32_inst$lb_recurse$lb2d_1$lbmem_1_2$wen_ext.in.0"],
          ["self.reset","lb32_inst$lb_recurse$lb2d_1$reset_term.in"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$wen_ext.out","lb32_inst$lb_recurse$lbmem_1_0_0$add_wen.in0"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$cnt$reg0.out","lb32_inst$lb_recurse$lbmem_1_0_0$add_wen.in1"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$cnt$enMux.in1","lb32_inst$lb_recurse$lbmem_1_0_0$add_wen.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$eq_depth.in1","lb32_inst$lb_recurse$lbmem_1_0_0$add_wen.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$state$enMux.in1.0","lb32_inst$lb_recurse$lbmem_1_0_0$c1.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$cnt$clrMux.in1","lb32_inst$lb_recurse$lbmem_1_0_0$cnt$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$cnt$enMux.out","lb32_inst$lb_recurse$lbmem_1_0_0$cnt$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$cnt$reg0.in","lb32_inst$lb_recurse$lbmem_1_0_0$cnt$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0_flush.out","lb32_inst$lb_recurse$lbmem_1_0_0$cnt$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$cnt$reg0.out","lb32_inst$lb_recurse$lbmem_1_0_0$cnt$enMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$state0.out","lb32_inst$lb_recurse$lbmem_1_0_0$cnt$enMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$eq_depth.in0","lb32_inst$lb_recurse$lbmem_1_0_0$depth_m1.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$state$enMux.sel","lb32_inst$lb_recurse$lbmem_1_0_0$eq_depth.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_1_0_0$mem.raddr"],
          ["self.out.0.1.0","lb32_inst$lb_recurse$lbmem_1_0_0$mem.rdata"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_1_0_0$mem.waddr"],
          ["self.in.0.0.0","lb32_inst$lb_recurse$lbmem_1_0_0$mem.wdata"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_1_0_0$mem.wen"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$state$reg0.out.0","lb32_inst$lb_recurse$lbmem_1_0_0$out_and_wen.in0"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_1_0_0$out_and_wen.in1"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$raddr$r$enMux.sel","lb32_inst$lb_recurse$lbmem_1_0_0$out_and_wen.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_1_0_0$raddr$add.in0"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$raddr$c1.out","lb32_inst$lb_recurse$lbmem_1_0_0$raddr$add.in1"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$raddr$mux.in0","lb32_inst$lb_recurse$lbmem_1_0_0$raddr$add.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$raddr$mux.in1","lb32_inst$lb_recurse$lbmem_1_0_0$raddr$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_1_0_0$raddr$eq.in0"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$raddr$maxval.out","lb32_inst$lb_recurse$lbmem_1_0_0$raddr$eq.in1"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$raddr$mux.sel","lb32_inst$lb_recurse$lbmem_1_0_0$raddr$eq.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$raddr$r$enMux.in1","lb32_inst$lb_recurse$lbmem_1_0_0$raddr$mux.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$raddr$r$clrMux.in1","lb32_inst$lb_recurse$lbmem_1_0_0$raddr$r$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$raddr$r$enMux.out","lb32_inst$lb_recurse$lbmem_1_0_0$raddr$r$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$raddr$r$reg0.in","lb32_inst$lb_recurse$lbmem_1_0_0$raddr$r$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0_flush.out","lb32_inst$lb_recurse$lbmem_1_0_0$raddr$r$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_1_0_0$raddr$r$enMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$state$clrMux.in1","lb32_inst$lb_recurse$lbmem_1_0_0$state$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$state$enMux.out","lb32_inst$lb_recurse$lbmem_1_0_0$state$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$state$reg0.in","lb32_inst$lb_recurse$lbmem_1_0_0$state$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0_flush.out","lb32_inst$lb_recurse$lbmem_1_0_0$state$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$state$reg0.out","lb32_inst$lb_recurse$lbmem_1_0_0$state$enMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$state0.in","lb32_inst$lb_recurse$lbmem_1_0_0$state$reg0.out.0"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_1_0_0$waddr$add.in0"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$waddr$c1.out","lb32_inst$lb_recurse$lbmem_1_0_0$waddr$add.in1"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$waddr$mux.in0","lb32_inst$lb_recurse$lbmem_1_0_0$waddr$add.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$waddr$mux.in1","lb32_inst$lb_recurse$lbmem_1_0_0$waddr$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_1_0_0$waddr$eq.in0"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$waddr$maxval.out","lb32_inst$lb_recurse$lbmem_1_0_0$waddr$eq.in1"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$waddr$mux.sel","lb32_inst$lb_recurse$lbmem_1_0_0$waddr$eq.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$waddr$r$enMux.in1","lb32_inst$lb_recurse$lbmem_1_0_0$waddr$mux.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$waddr$r$clrMux.in1","lb32_inst$lb_recurse$lbmem_1_0_0$waddr$r$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$waddr$r$enMux.out","lb32_inst$lb_recurse$lbmem_1_0_0$waddr$r$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$waddr$r$reg0.in","lb32_inst$lb_recurse$lbmem_1_0_0$waddr$r$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0_flush.out","lb32_inst$lb_recurse$lbmem_1_0_0$waddr$r$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_1_0_0$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_1_0_0$waddr$r$enMux.in0"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_1_0_0$waddr$r$enMux.sel"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_1_0_0$wen_ext.in.0"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$wen_ext.out","lb32_inst$lb_recurse$lbmem_1_0_1$add_wen.in0"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$cnt$reg0.out","lb32_inst$lb_recurse$lbmem_1_0_1$add_wen.in1"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$cnt$enMux.in1","lb32_inst$lb_recurse$lbmem_1_0_1$add_wen.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$eq_depth.in1","lb32_inst$lb_recurse$lbmem_1_0_1$add_wen.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$state$enMux.in1.0","lb32_inst$lb_recurse$lbmem_1_0_1$c1.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$cnt$clrMux.in1","lb32_inst$lb_recurse$lbmem_1_0_1$cnt$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$cnt$enMux.out","lb32_inst$lb_recurse$lbmem_1_0_1$cnt$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$cnt$reg0.in","lb32_inst$lb_recurse$lbmem_1_0_1$cnt$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1_flush.out","lb32_inst$lb_recurse$lbmem_1_0_1$cnt$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$cnt$reg0.out","lb32_inst$lb_recurse$lbmem_1_0_1$cnt$enMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$state0.out","lb32_inst$lb_recurse$lbmem_1_0_1$cnt$enMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$eq_depth.in0","lb32_inst$lb_recurse$lbmem_1_0_1$depth_m1.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$state$enMux.sel","lb32_inst$lb_recurse$lbmem_1_0_1$eq_depth.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_1_0_1$mem.raddr"],
          ["self.out.0.1.1","lb32_inst$lb_recurse$lbmem_1_0_1$mem.rdata"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_1_0_1$mem.waddr"],
          ["self.in.0.0.1","lb32_inst$lb_recurse$lbmem_1_0_1$mem.wdata"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_1_0_1$mem.wen"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$state$reg0.out.0","lb32_inst$lb_recurse$lbmem_1_0_1$out_and_wen.in0"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_1_0_1$out_and_wen.in1"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$raddr$r$enMux.sel","lb32_inst$lb_recurse$lbmem_1_0_1$out_and_wen.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_1_0_1$raddr$add.in0"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$raddr$c1.out","lb32_inst$lb_recurse$lbmem_1_0_1$raddr$add.in1"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$raddr$mux.in0","lb32_inst$lb_recurse$lbmem_1_0_1$raddr$add.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$raddr$mux.in1","lb32_inst$lb_recurse$lbmem_1_0_1$raddr$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_1_0_1$raddr$eq.in0"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$raddr$maxval.out","lb32_inst$lb_recurse$lbmem_1_0_1$raddr$eq.in1"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$raddr$mux.sel","lb32_inst$lb_recurse$lbmem_1_0_1$raddr$eq.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$raddr$r$enMux.in1","lb32_inst$lb_recurse$lbmem_1_0_1$raddr$mux.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$raddr$r$clrMux.in1","lb32_inst$lb_recurse$lbmem_1_0_1$raddr$r$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$raddr$r$enMux.out","lb32_inst$lb_recurse$lbmem_1_0_1$raddr$r$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$raddr$r$reg0.in","lb32_inst$lb_recurse$lbmem_1_0_1$raddr$r$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1_flush.out","lb32_inst$lb_recurse$lbmem_1_0_1$raddr$r$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_1_0_1$raddr$r$enMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$state$clrMux.in1","lb32_inst$lb_recurse$lbmem_1_0_1$state$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$state$enMux.out","lb32_inst$lb_recurse$lbmem_1_0_1$state$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$state$reg0.in","lb32_inst$lb_recurse$lbmem_1_0_1$state$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1_flush.out","lb32_inst$lb_recurse$lbmem_1_0_1$state$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$state$reg0.out","lb32_inst$lb_recurse$lbmem_1_0_1$state$enMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$state0.in","lb32_inst$lb_recurse$lbmem_1_0_1$state$reg0.out.0"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_1_0_1$waddr$add.in0"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$waddr$c1.out","lb32_inst$lb_recurse$lbmem_1_0_1$waddr$add.in1"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$waddr$mux.in0","lb32_inst$lb_recurse$lbmem_1_0_1$waddr$add.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$waddr$mux.in1","lb32_inst$lb_recurse$lbmem_1_0_1$waddr$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_1_0_1$waddr$eq.in0"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$waddr$maxval.out","lb32_inst$lb_recurse$lbmem_1_0_1$waddr$eq.in1"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$waddr$mux.sel","lb32_inst$lb_recurse$lbmem_1_0_1$waddr$eq.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$waddr$r$enMux.in1","lb32_inst$lb_recurse$lbmem_1_0_1$waddr$mux.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$waddr$r$clrMux.in1","lb32_inst$lb_recurse$lbmem_1_0_1$waddr$r$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$waddr$r$enMux.out","lb32_inst$lb_recurse$lbmem_1_0_1$waddr$r$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$waddr$r$reg0.in","lb32_inst$lb_recurse$lbmem_1_0_1$waddr$r$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1_flush.out","lb32_inst$lb_recurse$lbmem_1_0_1$waddr$r$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_1_0_1$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_1_0_1$waddr$r$enMux.in0"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_1_0_1$waddr$r$enMux.sel"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_1_0_1$wen_ext.in.0"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$wen_ext.out","lb32_inst$lb_recurse$lbmem_1_0_2$add_wen.in0"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$cnt$reg0.out","lb32_inst$lb_recurse$lbmem_1_0_2$add_wen.in1"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$cnt$enMux.in1","lb32_inst$lb_recurse$lbmem_1_0_2$add_wen.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$eq_depth.in1","lb32_inst$lb_recurse$lbmem_1_0_2$add_wen.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$state$enMux.in1.0","lb32_inst$lb_recurse$lbmem_1_0_2$c1.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$cnt$clrMux.in1","lb32_inst$lb_recurse$lbmem_1_0_2$cnt$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$cnt$enMux.out","lb32_inst$lb_recurse$lbmem_1_0_2$cnt$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$cnt$reg0.in","lb32_inst$lb_recurse$lbmem_1_0_2$cnt$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2_flush.out","lb32_inst$lb_recurse$lbmem_1_0_2$cnt$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$cnt$reg0.out","lb32_inst$lb_recurse$lbmem_1_0_2$cnt$enMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$state0.out","lb32_inst$lb_recurse$lbmem_1_0_2$cnt$enMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$eq_depth.in0","lb32_inst$lb_recurse$lbmem_1_0_2$depth_m1.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$state$enMux.sel","lb32_inst$lb_recurse$lbmem_1_0_2$eq_depth.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_1_0_2$mem.raddr"],
          ["self.out.0.1.2","lb32_inst$lb_recurse$lbmem_1_0_2$mem.rdata"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_1_0_2$mem.waddr"],
          ["self.in.0.0.2","lb32_inst$lb_recurse$lbmem_1_0_2$mem.wdata"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_1_0_2$mem.wen"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$state$reg0.out.0","lb32_inst$lb_recurse$lbmem_1_0_2$out_and_wen.in0"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_1_0_2$out_and_wen.in1"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$raddr$r$enMux.sel","lb32_inst$lb_recurse$lbmem_1_0_2$out_and_wen.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_1_0_2$raddr$add.in0"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$raddr$c1.out","lb32_inst$lb_recurse$lbmem_1_0_2$raddr$add.in1"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$raddr$mux.in0","lb32_inst$lb_recurse$lbmem_1_0_2$raddr$add.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$raddr$mux.in1","lb32_inst$lb_recurse$lbmem_1_0_2$raddr$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_1_0_2$raddr$eq.in0"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$raddr$maxval.out","lb32_inst$lb_recurse$lbmem_1_0_2$raddr$eq.in1"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$raddr$mux.sel","lb32_inst$lb_recurse$lbmem_1_0_2$raddr$eq.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$raddr$r$enMux.in1","lb32_inst$lb_recurse$lbmem_1_0_2$raddr$mux.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$raddr$r$clrMux.in1","lb32_inst$lb_recurse$lbmem_1_0_2$raddr$r$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$raddr$r$enMux.out","lb32_inst$lb_recurse$lbmem_1_0_2$raddr$r$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$raddr$r$reg0.in","lb32_inst$lb_recurse$lbmem_1_0_2$raddr$r$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2_flush.out","lb32_inst$lb_recurse$lbmem_1_0_2$raddr$r$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$raddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_1_0_2$raddr$r$enMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$state$clrMux.in1","lb32_inst$lb_recurse$lbmem_1_0_2$state$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$state$enMux.out","lb32_inst$lb_recurse$lbmem_1_0_2$state$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$state$reg0.in","lb32_inst$lb_recurse$lbmem_1_0_2$state$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2_flush.out","lb32_inst$lb_recurse$lbmem_1_0_2$state$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$state$reg0.out","lb32_inst$lb_recurse$lbmem_1_0_2$state$enMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$state0.in","lb32_inst$lb_recurse$lbmem_1_0_2$state$reg0.out.0"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_1_0_2$waddr$add.in0"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$waddr$c1.out","lb32_inst$lb_recurse$lbmem_1_0_2$waddr$add.in1"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$waddr$mux.in0","lb32_inst$lb_recurse$lbmem_1_0_2$waddr$add.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$waddr$mux.in1","lb32_inst$lb_recurse$lbmem_1_0_2$waddr$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_1_0_2$waddr$eq.in0"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$waddr$maxval.out","lb32_inst$lb_recurse$lbmem_1_0_2$waddr$eq.in1"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$waddr$mux.sel","lb32_inst$lb_recurse$lbmem_1_0_2$waddr$eq.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$waddr$r$enMux.in1","lb32_inst$lb_recurse$lbmem_1_0_2$waddr$mux.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$waddr$r$clrMux.in1","lb32_inst$lb_recurse$lbmem_1_0_2$waddr$r$c0.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$waddr$r$enMux.out","lb32_inst$lb_recurse$lbmem_1_0_2$waddr$r$clrMux.in0"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$waddr$r$reg0.in","lb32_inst$lb_recurse$lbmem_1_0_2$waddr$r$clrMux.out"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2_flush.out","lb32_inst$lb_recurse$lbmem_1_0_2$waddr$r$clrMux.sel"],
          ["lb32_inst$lb_recurse$lbmem_1_0_2$waddr$r$reg0.out","lb32_inst$lb_recurse$lbmem_1_0_2$waddr$r$enMux.in0"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_1_0_2$waddr$r$enMux.sel"],
          ["self.wen","lb32_inst$lb_recurse$lbmem_1_0_2$wen_ext.in.0"],
          ["lb32_inst$lb_recurse$valcounter_0$count_const.out","lb32_inst$lb_recurse$valcompare_0.in1"],
          ["lb32_inst$lb_recurse$valid_andr$opN_0$_join.in1","lb32_inst$lb_recurse$valcompare_0.out"],
          ["lb32_inst$lb_recurse$valcounter_1$count$reg0.out","lb32_inst$lb_recurse$valcompare_1.in1"],
          ["lb32_inst$lb_recurse$valid_andr$opN_1$_join.in0","lb32_inst$lb_recurse$valcompare_1.out"],
          ["lb32_inst$lb_recurse$valcounter_2$count$reg0.out","lb32_inst$lb_recurse$valcompare_2.in1"],
          ["lb32_inst$lb_recurse$valid_andr$opN_1$_join.in1","lb32_inst$lb_recurse$valcompare_2.out"],
          ["lb32_inst$lb_recurse$valcounter_1$and.in1","lb32_inst$lb_recurse$valcounter_0$one_const.out"],
          ["lb32_inst$lb_recurse$valcounter_1$count$enMux.sel","lb32_inst$lb_recurse$valcounter_0$one_const.out"],
          ["lb32_inst$lb_recurse$valcounter_1$count$reg0.out","lb32_inst$lb_recurse$valcounter_1$add.in0"],
          ["lb32_inst$lb_recurse$valcounter_1$inc.out","lb32_inst$lb_recurse$valcounter_1$add.in1"],
          ["lb32_inst$lb_recurse$valcounter_1$count$enMux.in1","lb32_inst$lb_recurse$valcounter_1$add.out"],
          ["lb32_inst$lb_recurse$valcounter_1$ult.in1","lb32_inst$lb_recurse$valcounter_1$add.out"],
          ["lb32_inst$lb_recurse$valcounter_1$ult.out","lb32_inst$lb_recurse$valcounter_1$and.in0"],
          ["lb32_inst$lb_recurse$valcounter_1$resetOr.in0","lb32_inst$lb_recurse$valcounter_1$and.out"],
          ["lb32_inst$lb_recurse$valcounter_2$and.in1","lb32_inst$lb_recurse$valcounter_1$and.out"],
          ["lb32_inst$lb_recurse$valcounter_2$count$enMux.sel","lb32_inst$lb_recurse$valcounter_1$and.out"],
          ["lb32_inst$lb_recurse$valcounter_1$count$clrMux.in1","lb32_inst$lb_recurse$valcounter_1$count$c0.out"],
          ["lb32_inst$lb_recurse$valcounter_1$count$enMux.out","lb32_inst$lb_recurse$valcounter_1$count$clrMux.in0"],
          ["lb32_inst$lb_recurse$valcounter_1$count$reg0.in","lb32_inst$lb_recurse$valcounter_1$count$clrMux.out"],
          ["lb32_inst$lb_recurse$valcounter_1$resetOr.out","lb32_inst$lb_recurse$valcounter_1$count$clrMux.sel"],
          ["lb32_inst$lb_recurse$valcounter_1$count$reg0.out","lb32_inst$lb_recurse$valcounter_1$count$enMux.in0"],
          ["lb32_inst$lb_recurse$valcounter_1$ult.in0","lb32_inst$lb_recurse$valcounter_1$max.out"],
          ["self.reset","lb32_inst$lb_recurse$valcounter_1$resetOr.in1"],
          ["lb32_inst$lb_recurse$valcounter_2$count$reg0.out","lb32_inst$lb_recurse$valcounter_2$add.in0"],
          ["lb32_inst$lb_recurse$valcounter_2$inc.out","lb32_inst$lb_recurse$valcounter_2$add.in1"],
          ["lb32_inst$lb_recurse$valcounter_2$count$enMux.in1","lb32_inst$lb_recurse$valcounter_2$add.out"],
          ["lb32_inst$lb_recurse$valcounter_2$ult.in1","lb32_inst$lb_recurse$valcounter_2$add.out"],
          ["lb32_inst$lb_recurse$valcounter_2$ult.out","lb32_inst$lb_recurse$valcounter_2$and.in0"],
          ["lb32_inst$lb_recurse$valcounter_2$resetOr.in0","lb32_inst$lb_recurse$valcounter_2$and.out"],
          ["lb32_inst$lb_recurse$valcounter_2$count$clrMux.in1","lb32_inst$lb_recurse$valcounter_2$count$c0.out"],
          ["lb32_inst$lb_recurse$valcounter_2$count$enMux.out","lb32_inst$lb_recurse$valcounter_2$count$clrMux.in0"],
          ["lb32_inst$lb_recurse$valcounter_2$count$reg0.in","lb32_inst$lb_recurse$valcounter_2$count$clrMux.out"],
          ["lb32_inst$lb_recurse$valcounter_2$resetOr.out","lb32_inst$lb_recurse$valcounter_2$count$clrMux.sel"],
          ["lb32_inst$lb_recurse$valcounter_2$count$reg0.out","lb32_inst$lb_recurse$valcounter_2$count$enMux.in0"],
          ["lb32_inst$lb_recurse$valcounter_2$ult.in0","lb32_inst$lb_recurse$valcounter_2$max.out"],
          ["self.reset","lb32_inst$lb_recurse$valcounter_2$resetOr.in1"],
          ["lb32_inst$lb_recurse$valid_andr$opN_0$_join.out","lb32_inst$lb_recurse$valid_andr$_join.in0"],
          ["lb32_inst$lb_recurse$valid_andr$opN_1$_join.out","lb32_inst$lb_recurse$valid_andr$_join.in1"],
          ["self.valid","lb32_inst$lb_recurse$valid_andr$_join.out"],
          ["self.wen","lb32_inst$lb_recurse$valid_andr$opN_0$_join.in0"],
          ["self.out.1.1.0","self.in.0.0.0"],
          ["self.out.1.1.1","self.in.0.0.1"],
          ["self.out.1.1.2","self.in.0.0.2"]
        ]
      }
    }
  }
}
}
